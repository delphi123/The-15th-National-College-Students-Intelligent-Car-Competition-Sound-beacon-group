	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99245187"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\.IfxCpu_Trap.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore\\APP -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore\\Main -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Platform -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\If -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore\\User -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore\\APP -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore\\Main -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\AppSw\\Tricore\\Driver -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Platform -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Platform\\Tricore -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr\\TC26B -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\If -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IG:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c'

	
$TC16X
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_memoryManagementError',code,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_memoryManagementError'
	.align	2
	
	.global	IfxCpu_Trap_memoryManagementError

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     2   * \file IfxCpu_Trap.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     3   * \brief This file contains the APIs for Trap related functions.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     7   * \copyright Copyright (c) 2012 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    44   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    45   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    46  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    47  /*******************************************************************************
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    48  **                      Includes                                              **
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    49  *******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    50  #include "IfxCpu_Trap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    51  #include "Cpu/Std/IfxCpu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    52  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    53  #include "IfxCpu_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    54  #include "Ifx_Cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    55  #ifdef IFX_CFG_EXTEND_TRAP_HOOKS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    56  #include "Ifx_Cfg_Trap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    57  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    59  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    60  /*                           Macros                                           */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    61  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    62  /** \brief Configuration for CpuX enable.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    63   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    64   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    65  #ifndef IFX_CFG_CPU_TRAP_TSR_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    66  #   define IFX_CFG_CPU_TRAP_TSR_HOOK(trapWatch)          /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    67  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    68  #ifndef IFX_CFG_CPU_TRAP_SYSCALL_CPU0_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    69  #   define IFX_CFG_CPU_TRAP_SYSCALL_CPU0_HOOK(trapWatch) ((void)trapWatch) /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    70  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    71  #ifndef IFX_CFG_CPU_TRAP_SYSCALL_CPU1_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    72  #   define IFX_CFG_CPU_TRAP_SYSCALL_CPU1_HOOK(trapWatch) ((void)trapWatch) /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    73  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    74  #ifndef IFX_CFG_CPU_TRAP_SYSCALL_CPU2_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    75  #   define IFX_CFG_CPU_TRAP_SYSCALL_CPU2_HOOK(trapWatch) ((void)trapWatch) /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    76  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    77  #ifndef IFX_CFG_CPU_TRAP_SYSCALL_CPU3_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    78  #   define IFX_CFG_CPU_TRAP_SYSCALL_CPU3_HOOK(trapWatch) ((void)trapWatch) /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    79  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    80  #ifndef IFX_CFG_CPU_TRAP_SYSCALL_CPU4_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    81  #   define IFX_CFG_CPU_TRAP_SYSCALL_CPU4_HOOK(trapWatch) ((void)trapWatch) /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    82  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    83  #ifndef IFX_CFG_CPU_TRAP_SYSCALL_CPU5_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    84  #   define IFX_CFG_CPU_TRAP_SYSCALL_CPU5_HOOK(trapWatch) ((void)trapWatch) /**< By default macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    85  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    86  #ifndef IFX_CFG_CPU_TRAP_NMI_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    87  #   define IFX_CFG_CPU_TRAP_NMI_HOOK(trapWatch)          ((void)trapWatch) /**< By default NMI macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    88  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    89  #ifndef IFX_CFG_CPU_TRAP_MME_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    90  #   define IFX_CFG_CPU_TRAP_MME_HOOK(trapWatch)    ((void)trapWatch)      /**< By default memory Management Error macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    91  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    92  #ifndef IFX_CFG_CPU_TRAP_IPE_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    93  #   define IFX_CFG_CPU_TRAP_IPE_HOOK(trapWatch)    ((void)trapWatch)      /**< By default internal Protection Error macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    94  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    95  #ifndef IFX_CFG_CPU_TRAP_IE_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    96  #   define IFX_CFG_CPU_TRAP_IE_HOOK(trapWatch)     ((void)trapWatch)      /**< By default instruction Error macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    97  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    98  #ifndef IFX_CFG_CPU_TRAP_CME_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	    99  #   define IFX_CFG_CPU_TRAP_CME_HOOK(trapWatch)    ((void)trapWatch)      /**< By default context Management Error macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   100  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   101  #ifndef IFX_CFG_CPU_TRAP_BE_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   102  #   define IFX_CFG_CPU_TRAP_BE_HOOK(trapWatch)     ((void)trapWatch)      /**< By default bus Error macro is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   103  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   104  #ifndef IFX_CFG_CPU_TRAP_ASSERT_HOOK
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   105  #   define IFX_CFG_CPU_TRAP_ASSERT_HOOK(trapWatch) ((void)trapWatch)     /**< By default assertion is empty*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   106  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   107  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   108  #ifndef IFX_CFG_CPU_TRAP_DEBUG
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   109   #define IFX_CFG_CPU_TRAP_DEBUG __debug()
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   110  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   111  /*******************************************************************************
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   112  **                      variables                                     **
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   113  *******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   114  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   115  /*******************************************************************************
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   116  **                      Function definitions                          **
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   117  *******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   118  IFX_INLINE IfxCpu_Trap IfxCpu_Trap_extractTrapInfo(uint8 trapClass, uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   119  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   120      IfxCpu_Trap trapInfo;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   121      trapInfo.tAddr  = (unsigned int)__getA11();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   122      trapInfo.tClass = trapClass;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   123      trapInfo.tId    = tin;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   124      trapInfo.tCpu   = IfxCpu_getCoreId();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   125      return trapInfo;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   126  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   127  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   129  void IfxCpu_Trap_memoryManagementError(uint32 tin)
; Function IfxCpu_Trap_memoryManagementError
.L3:
IfxCpu_Trap_memoryManagementError:	.type	func
	sub.a	a10,#8
.L96:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L231:
	
.L267:
	mov.d	d0,a15
.L106:
	insert	d1,d1,#0,#8,#8
.L268:
	insert	d1,d1,d4,#0,#8
.L111:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L232:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L112:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   130    trapWatch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_memoryManagement, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   131      IFX_CFG_CPU_TRAP_MME_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   132      IFX_CFG_CPU_TRAP_DEBUG;
	st.d	[a10]0,e0
.L97:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   133      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	ld.d	e0,[a10]0
.L234:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   134      __asm("rfe");
	debug
.L269:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   135  }
	rslcx
.L270:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   136  
	rfe
.L271:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   137  
	ret
.L90:
	
__IfxCpu_Trap_memoryManagementError_function_end:
	.size	IfxCpu_Trap_memoryManagementError,__IfxCpu_Trap_memoryManagementError_function_end-IfxCpu_Trap_memoryManagementError
.L34:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxCpu_Trap..cocofun_1'
	.align	2
; Function .cocofun_1
.L5:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	extr.u	d2,d1,#16,#8
.L369:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	and	d15,#7
.L233:
	insert	d15,d2,d15,#0,#3
	insert	d1,d1,d15,#16,#8
	fret
.L89:
	; End of function
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_internalProtectionError',code,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_internalProtectionError'
	.align	2
	
	.global	IfxCpu_Trap_internalProtectionError

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   138  Cpu_Trap_internalProtectionError(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   139  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   140      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_internalProtectionError
.L7:
IfxCpu_Trap_internalProtectionError:	.type	func
	sub.a	a10,#8
.L121:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L236:
	
.L276:
	mov.d	d0,a15
.L126:
	insert	d1,d1,#1,#8,#8
.L277:
	insert	d1,d1,d4,#0,#8
.L128:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L235:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L129:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   141   trapWatch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_internalProtection, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   142      IFX_CFG_CPU_TRAP_IPE_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   143      IFX_CFG_CPU_TRAP_DEBUG;
	st.d	[a10]0,e0
.L122:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   144      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	ld.d	e0,[a10]0
.L237:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   145      __asm("rfe");
	debug
.L278:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   146  }
	rslcx
.L279:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   147  
	rfe
.L280:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   148  
	ret
.L117:
	
__IfxCpu_Trap_internalProtectionError_function_end:
	.size	IfxCpu_Trap_internalProtectionError,__IfxCpu_Trap_internalProtectionError_function_end-IfxCpu_Trap_internalProtectionError
.L39:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_instructionError',code,cluster('IfxCpu_Trap_instructionError')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_instructionError'
	.align	2
	
	.global	IfxCpu_Trap_instructionError

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   149  void IfxCpu_Trap_instructionError(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   150  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   151      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_instructionError
.L9:
IfxCpu_Trap_instructionError:	.type	func
	sub.a	a10,#8
.L135:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L239:
	
.L285:
	mov.d	d0,a15
.L140:
	insert	d1,d1,#2,#8,#8
.L286:
	insert	d1,d1,d4,#0,#8
.L142:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L238:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L143:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   152  ch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_instructionErrors, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   153      IFX_CFG_CPU_TRAP_IE_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   154      IFX_CFG_CPU_TRAP_DEBUG;
	st.d	[a10]0,e0
.L136:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   155      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	ld.d	e0,[a10]0
.L240:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   156      __asm("rfe");
	debug
.L287:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   157  }
	rslcx
.L288:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   158  
	rfe
.L289:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   159  
	ret
.L131:
	
__IfxCpu_Trap_instructionError_function_end:
	.size	IfxCpu_Trap_instructionError,__IfxCpu_Trap_instructionError_function_end-IfxCpu_Trap_instructionError
.L44:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_contextManagementError',code,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_contextManagementError'
	.align	2
	
	.global	IfxCpu_Trap_contextManagementError

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   160  void IfxCpu_Trap_contextManagementError(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   162      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_contextManagementError
.L11:
IfxCpu_Trap_contextManagementError:	.type	func
	sub.a	a10,#8
.L149:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L242:
	
.L294:
	mov.d	d0,a15
.L154:
	insert	d1,d1,#3,#8,#8
.L295:
	insert	d1,d1,d4,#0,#8
.L156:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L241:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L157:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   163  ch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_contextManagement, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   164      IFX_CFG_CPU_TRAP_CME_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   165      IFX_CFG_CPU_TRAP_DEBUG;
	st.d	[a10]0,e0
.L150:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   166      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	ld.d	e0,[a10]0
.L243:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   167      __asm("rfe");
	debug
.L296:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   168  }
	rslcx
.L297:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   169  
	rfe
.L298:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   170  
	ret
.L145:
	
__IfxCpu_Trap_contextManagementError_function_end:
	.size	IfxCpu_Trap_contextManagementError,__IfxCpu_Trap_contextManagementError_function_end-IfxCpu_Trap_contextManagementError
.L49:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_busError',code,cluster('IfxCpu_Trap_busError')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_busError'
	.align	2
	
	.global	IfxCpu_Trap_busError

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   171  void IfxCpu_Trap_busError(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   173      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_busError
.L13:
IfxCpu_Trap_busError:	.type	func
	sub.a	a10,#8
.L163:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L245:
	
.L303:
	mov.d	d0,a15
.L168:
	insert	d1,d1,#4,#8,#8
.L304:
	insert	d1,d1,d4,#0,#8
.L170:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L244:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L171:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   174  ch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_bus, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   175      IFX_CFG_CPU_TRAP_BE_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   176      IFX_CFG_CPU_TRAP_DEBUG;
	st.d	[a10]0,e0
.L164:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   177      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	ld.d	e0,[a10]0
.L246:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   178      __asm("rfe");
	debug
.L305:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   179  }
	rslcx
.L306:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   180  
	rfe
.L307:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   181  
	ret
.L159:
	
__IfxCpu_Trap_busError_function_end:
	.size	IfxCpu_Trap_busError,__IfxCpu_Trap_busError_function_end-IfxCpu_Trap_busError
.L54:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_assertion',code,cluster('IfxCpu_Trap_assertion')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_assertion'
	.align	2
	
	.global	IfxCpu_Trap_assertion

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   182  void IfxCpu_Trap_assertion(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   183  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   184      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_assertion
.L15:
IfxCpu_Trap_assertion:	.type	func
	sub.a	a10,#8
.L177:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L248:
	
.L312:
	mov.d	d0,a15
.L182:
	insert	d1,d1,#5,#8,#8
.L313:
	insert	d1,d1,d4,#0,#8
.L184:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L247:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L185:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   185  ch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_assertion, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   186      IFX_CFG_CPU_TRAP_ASSERT_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   187      IFX_CFG_CPU_TRAP_DEBUG;
	st.d	[a10]0,e0
.L178:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   188      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	ld.d	e0,[a10]0
.L249:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   189      __asm("rfe");
	debug
.L314:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   190  }
	rslcx
.L315:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   191  
	rfe
.L316:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   192  
	ret
.L173:
	
__IfxCpu_Trap_assertion_function_end:
	.size	IfxCpu_Trap_assertion,__IfxCpu_Trap_assertion_function_end-IfxCpu_Trap_assertion
.L59:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_systemCall_Cpu0',code,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_systemCall_Cpu0'
	.align	2
	
	.global	IfxCpu_Trap_systemCall_Cpu0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   193  void IfxCpu_Trap_systemCall_Cpu0(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   194  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   195      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_systemCall_Cpu0
.L17:
IfxCpu_Trap_systemCall_Cpu0:	.type	func
	sub.a	a10,#8
.L191:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L251:
	
.L321:
	mov.d	d0,a15
.L196:
	insert	d1,d1,#6,#8,#8
.L322:
	insert	d1,d1,d4,#0,#8
.L198:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L250:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L199:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   196  ch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_systemCall, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   197      IFX_CFG_CPU_TRAP_SYSCALL_CPU0_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   198      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	st.d	[a10]0,e0
.L192:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   199      __asm("rfe");
	ld.d	e0,[a10]0
.L252:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   200  }
	rslcx
.L323:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   201  
	rfe
.L324:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   202  #if IFXCPU_NUM_MODULES >= 2
	ret
.L187:
	
__IfxCpu_Trap_systemCall_Cpu0_function_end:
	.size	IfxCpu_Trap_systemCall_Cpu0,__IfxCpu_Trap_systemCall_Cpu0_function_end-IfxCpu_Trap_systemCall_Cpu0
.L64:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_systemCall_Cpu1',code,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_systemCall_Cpu1'
	.align	2
	
	.global	IfxCpu_Trap_systemCall_Cpu1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   203  void IfxCpu_Trap_systemCall_Cpu1(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   204  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   205      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_systemCall_Cpu1
.L19:
IfxCpu_Trap_systemCall_Cpu1:	.type	func
	sub.a	a10,#8
.L205:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L254:
	
.L329:
	mov.d	d0,a15
.L210:
	insert	d1,d1,#6,#8,#8
.L330:
	insert	d1,d1,d4,#0,#8
.L212:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L253:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L213:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   206  tch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_systemCall, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   207      IFX_CFG_CPU_TRAP_SYSCALL_CPU1_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   208      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	st.d	[a10]0,e0
.L206:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   209      __asm("rfe");
	ld.d	e0,[a10]0
.L255:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   210  }
	rslcx
.L331:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   211  #endif
	rfe
.L332:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   212  
	ret
.L201:
	
__IfxCpu_Trap_systemCall_Cpu1_function_end:
	.size	IfxCpu_Trap_systemCall_Cpu1,__IfxCpu_Trap_systemCall_Cpu1_function_end-IfxCpu_Trap_systemCall_Cpu1
.L69:
	; End of function
	
	.sdecl	'.text.IfxCpu_Trap.IfxCpu_Trap_nonMaskableInterrupt',code,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.text.IfxCpu_Trap.IfxCpu_Trap_nonMaskableInterrupt'
	.align	2
	
	.global	IfxCpu_Trap_nonMaskableInterrupt

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   213  #if IFXCPU_NUM_MODULES >= 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   214  void IfxCpu_Trap_systemCall_Cpu2(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   215  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   216      volatile IfxCpu_Trap trapWatch;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   217      trapWatch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_systemCall, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   218      IFX_CFG_CPU_TRAP_SYSCALL_CPU2_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   219      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   220      __asm("rfe");
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   221  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   222  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   224  #if IFXCPU_NUM_MODULES >= 4
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   225  void IfxCpu_Trap_systemCall_Cpu3(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   226  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   227      volatile IfxCpu_Trap trapWatch;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   228      trapWatch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_systemCall, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   229      IFX_CFG_CPU_TRAP_SYSCALL_CPU3_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   230      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   231      __asm("rfe");
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   232  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   233  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   234  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   235  #if IFXCPU_NUM_MODULES >= 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   236  void IfxCpu_Trap_systemCall_Cpu4(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   237  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   238      volatile IfxCpu_Trap trapWatch;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   239      trapWatch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_systemCall, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   240      IFX_CFG_CPU_TRAP_SYSCALL_CPU4_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   241      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   242      __asm("rfe");
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   243  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   244  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   246  #if IFXCPU_NUM_MODULES >= 6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   247  void IfxCpu_Trap_systemCall_Cpu5(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   249      volatile IfxCpu_Trap trapWatch;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   250      trapWatch = IfxCpu_Trap_extractTrapInfo(IfxCpu_Trap_Class_systemCall, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   251      IFX_CFG_CPU_TRAP_SYSCALL_CPU5_HOOK(trapWatch);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   252      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   253      __asm("rfe");
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   254  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   255  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   256  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   257  void IfxCpu_Trap_nonMaskableInterrupt(uint32 tin)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   258  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   259      volatile IfxCpu_Trap trapWatch;
; Function IfxCpu_Trap_nonMaskableInterrupt
.L21:
IfxCpu_Trap_nonMaskableInterrupt:	.type	func
	sub.a	a10,#8
.L219:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   351      __asm("mov.aa %0, a11": "=a" (res) : :"a11");      (inlined)
	
	mov.aa a15, a11
.L257:
	
.L337:
	mov.d	d0,a15
.L224:
	insert	d1,d1,#7,#8,#8
.L338:
	insert	d1,d1,d4,#0,#8
.L226:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     5   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_11_0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     8   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	     9   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    11   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    12   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    16   * terms of use are agreed, use of this file is subject to following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    17  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    18  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    20  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    21   * Permission is hereby granted, free of charge, to any person or 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    22   * organization obtaining a copy of the software and accompanying 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    26   * Software is furnished to do so, all subject to the following:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    27  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    28   * The copyright notices in the Software and this entire statement, including
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    29   * the above license grant, this restriction and the following disclaimer, must
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    30   * be included in all copies of the Software, in whole or in part, and all
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    31   * derivative works of the Software, unless such copies or derivative works are
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    32   * solely in the form of machine-executable object code generated by a source
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    33   * language processor.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    34  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    41   * DEALINGS IN THE SOFTWARE.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    42  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    43   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    44   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    45   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    46   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    47   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    48   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    49   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    50   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    51   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    52   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    53   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    54   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    55   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    56   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    57   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    58   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    59   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    60   * \ingroup IfxLld_Cpu_Std
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    61   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    62  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    63  #ifndef IFXCPU_H
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    64  #define IFXCPU_H 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    65  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    66  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    67  /*----------------------------------Includes----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    68  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    69  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    70  #include "_Impl/IfxCpu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    71  #include "IfxSrc_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    72  #include "IfxScu_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    73  #include "IfxStm_reg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    74  #include "_Impl/IfxScu_cfg.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    75  #include "_Utilities/Ifx_Assert.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    76  #include "Scu/Std/IfxScuWdt.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    77  #include "Scu/Std/IfxScuCcu.h"
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    78  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    79  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    80  /*-----------------------------------Macros-----------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    81  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    82  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    83  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    84   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    85   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    86   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    87   * Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    88   *  \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    89   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    90   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    91   *  \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    92   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    93  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    94  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    95  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    96   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    97   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    98   * the CPU number.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	    99   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   100   *   Example usage:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   101   *   \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   102   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   103   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   104   *   \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   105   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   106  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   107  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   108  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   109  /*------------------------------Type Definitions------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   110  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   111  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   112  /** \brief Lock type Spin lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   113   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   114  typedef unsigned int IfxCpu_spinLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   115  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Lock type Mutex lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   117   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   118  typedef unsigned int IfxCpu_mutexLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   119  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   120  /** \brief Event used for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   121   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   122  typedef unsigned int IfxCpu_syncEvent;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   123  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   124  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   125  /*--------------------------------Enumerations--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   127  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   128  /** \addtogroup IfxLld_Cpu_Std_Enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   129   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   130  /** \brief Enumeration for the Cpu mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   131   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   132  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   133  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_halt,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_run,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_idle,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   137      IfxCpu_CoreMode_sleep,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   138      IfxCpu_CoreMode_stby,
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   139      IfxCpu_CoreMode_unknown
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   140  } IfxCpu_CoreMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   141  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance conunter modes
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   143   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   144  typedef enum
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   145  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   148  } IfxCpu_CounterMode;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   149  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   150  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   151  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   152  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   153  /*-----------------------------Data Structures--------------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   154  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   155  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   156  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   157   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   158  /** \brief counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   159   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   160  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   161  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   162      uint32  counter;        /**< \brief Counter value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   163      boolean overlfow;       /**< \brief sticky overlfow */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_Counter;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   165  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   166  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   167  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   168  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   169   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   170  /** \brief Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   171   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   172  typedef struct
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   173  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_Perf;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   180  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   181  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   182  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   183  /** \addtogroup IfxLld_Cpu_Std_Core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   184   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   185  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   187  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   188  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   189  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief API to get the address for CPU HW module register memory map
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   191   * \param cpu Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   192   * \return CPU module register address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   193   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   194  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   195  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief API to get core id of the CPU of the caller.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   197   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   198   * Use IfxCpu_getCoreIndex() to get cpu no.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   199   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   200   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   201  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   202  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   203  /** \brief API to get cpu index of the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   204   * Note: This api can be used whereever cpu no/index is needed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   205   * \return Resource index of the CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   206   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   207  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   208  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   209  /** \brief API to initialize the context save area of the CPU where this is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   210   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   211   * This API can initialize the CSA of the host CPU where this API is called. This API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   212   * shall not be used to initialize the CSA of another CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   213   * \param csaBegin Pointer to start of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   214   * \param csaEnd Pointer to end of context save area
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   215   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   216   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   217  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   218  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   219  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   220   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   221   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   222  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   223  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   224  /** \brief Triggers Software Reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   225   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   226   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   227  IFX_INLINE void IfxCpu_triggerSwReset(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   228  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   229  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   230  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   231  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   232  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   233  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   234   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   235   * \return Current mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   236   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   237  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   238  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   239  /** \brief API to get current mode of CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   240   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   241   * \return Resource index of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   242   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   243  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   244  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   245  /** \brief API to set mode of the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   246   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   247   * \param mode CPU mode to be set by this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   248   * \return Success status of the activity (setting the core mode).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   249   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   250   * \retval FALSE: If the activity can't be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   251   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   252  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   253  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   254  /** \brief API to set the program counter for the CPU specified.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   255   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   256   * \param programCounter Program counter value to be set
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   257   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   258   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   259   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   260   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   261  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   262  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   263  /** \brief API to set the program counter for the CPU specified and start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   264   * \param cpu Pointer to the CPU HW module (register memory map)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   265   * \param programCounter Program counter value to start the CPU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   266   * \return success status of the activity (setting program counter value).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval TRUE: If the activity successfully be performed.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   268   * \retval FALSE: If the activity can't be performed
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   269   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   270  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   271  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   272  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   273  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   274  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   275   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   276  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   277  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   278  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   279  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   280  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   281  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   282   * This API provides the status of CPU where this API is called
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   283   * \return Status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   284   * \retval TRUE: Global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   285   * \retval FALSE: Global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   286   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   287  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   288  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   289  /** \brief API to disable global interrupt and return the previous status.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   290   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   291   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   292   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   293   * \return Previous status of global interrupt enable bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   294   * \retval TRUE: Previously, global interrupts enabled.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   295   * \retval FALSE: Previously, global interrupts disabled
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   296   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   297  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   298  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   299  /** \brief API to enable global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   300   * This API simply enables the global interrupt.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   301   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   302   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   303  IFX_INLINE void IfxCpu_enableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   304  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   305  /** \brief Disable the Global Interrupt
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   306   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   307   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   309  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief API to restore global interrupt with that of the passed parameter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   311   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   312   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   313   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   314   * \param enabled Previous status of the global interrupt enable bit
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   315   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   316   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   318  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   320  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   323  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   327  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to enable/ disable the data cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   329   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   330   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   331   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   332   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   333   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   334   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   335  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   336  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   337  /** \brief API to enable/ disable the instruction cacheability for selected segments
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   338   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   339   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   340   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   341   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   343   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   345  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to invalidate the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   348   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   350  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   352   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   353   * \return Status TRUE/FALSE
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   354   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   356  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   358   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enable Command to enable or bypass the data cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   362   * TRUE: Enable the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   363   * FALSE: Bypass the data cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   364   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   365   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   367  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   369   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   371   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   372   * \param enable Command to enable or bypass the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   373   * TRUE: Enable the program cache.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   374   * FALSE: Bypass the program cache
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   375   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   376   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   377  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   378  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   379  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   380  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   381  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   382   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   383  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   384  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   385  /*-------------------------Inline Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   386  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   387  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   388  /** \brief API to read the clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   389   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   390   * This API can be used to read clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   391   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   392   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   393   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   394  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   395  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   396  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   397   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   398   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   399   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   400   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   401   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   402   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   403   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   404   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   405   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   406   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   408  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to read the instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   410   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   413   * \return Counter value. 0 to 0x7FFFFFFF.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   414   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   415  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   416  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   417  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   418   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   419   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   420   * It cannot be used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   421   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   422   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   423   * reading the counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   424   * \return Status of sticky overflow bit.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   425   * \retval TRUE: Sticky overflow bit is set.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   426   * \retval FALSE: Sticky overflow bit is reset
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   427   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   428  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   429  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   430  /** \brief API to read the performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   431   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   432   * \return counter value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   433   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   434  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   435  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   436  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   437   * This is generic function to get sticky overflow bit of any performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   438   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Status
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   440   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   442  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief Reset and start instruction, clock and multi counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   444   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   445   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   446   * \param mode Counter mode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   448   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   450  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   452   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   455   * \param enable enable Command to enable or disable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   456   * TRUE: Enable the performance counter.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   457   * FALSE: Disable the performance counter
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   458   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   459   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   460  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   461  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   462  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   463  /** \brief Stop instruction and clock counters, return their values
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   464   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   465   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   466   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   467   * \return Performance counter result
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   468   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   470  #endif
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   471  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   472  /** \brief API to update clock counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   473   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   474   * This API can be used to update clock counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   475   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   476   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   477   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   478   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   479  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   480  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   481  /** \brief API to update Instruction counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   482   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   483   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   484   * used for this activity towards other CPUs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   485   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   486   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   487   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   489  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief API to update performance counter for the CPU which calls this API.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   491   * This is generic function to update any of the performance counters
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   492   * \param address Address
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   493   * \param count Count
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   495   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   497  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   498  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   499  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   500  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   501   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   502  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   503  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   504  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   505  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   506  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   507  /** \brief API to acquire the mutex (binary semaphore).
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   508   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   509   * This API can be used to acquire/get the mutex.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   510   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   511   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   512   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   513   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   514   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   515   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   516   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   517   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   518   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   519   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   520   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   521   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   522   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   523  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   524  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   525  /** \brief API to unlock the mutex .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   526   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   527   * This API can be used to unlock the previously acquired mutex
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   528   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   529   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   530   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   531   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   532   *    IfxCpu_mutexLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   533   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   534   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   535   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   536   *      IfxCpu_releaseMutex(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   537   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   538   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   539   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   540   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   541  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   542  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   543  /** \brief API to unlock the resource .
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   544   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   545   * This API can be used to unlock the previously acquired lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   546   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   547   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   548   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   549  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   550  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   551  /** \brief API to lock the resource in spin mode with the given timeout.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   552   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   553   * This API can be used to spin lock for the lock for the given timeout period.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   554   * \param lock lock pointer
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   555   * \param timeoutCount loop counter value used for timeout to acquire lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   556   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   557   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   558   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   559   *    IfxCpu_spinLock resourceLock;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   560   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   561   *    if (flag){
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   562   *      // critical section
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   563   *      IfxCpu_resetSpinLock(&resourceLock);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   564   *    }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   565   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   566   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   567   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   568  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   569  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   570  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   571  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   572  /** \addtogroup IfxLld_Cpu_Std_Utility
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   573   * \{ */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   574  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   575  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   576  /*-------------------------Global Function Prototypes-------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   577  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   578  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   579  /** \brief API to get random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   580   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   581   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   582   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   583  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   584  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   585  /** \brief API to get random value with in the range
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   586   * \param seed Pointer to seed value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   587   * \param min minimum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   588   * \param max maximum range value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   589   * \return random value
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   590   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   591  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   592  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   593  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   594   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   595   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   596   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   597   * CORE_ID register.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   598   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   599   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   600   * e.g:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   601   * 1. Check for synchronisation between core 0 and core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   602   * # define 0x41U
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   603   * 2. Check for synchronisation between core 0 to core 5
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   604   * # define 0x5FU
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   605   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   606   * Note:
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   607   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   608   * Core 0: 0
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   609   * Core 1: 1
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   610   * Core 2: 2
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   611   * Core 3: 3
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   612   * Core 4: 4
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   613   * Core 5: 6
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   614   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   615   * \param timeoutMilliSec timeout in millisec
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   616   * \return Error condition
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   617   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   618   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   619   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   620   * \code
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   621   * // Global variable. preferably located in  shared memory.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   622   * IfxCpu_syncEvent event;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   623   * boolean errorVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   624   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   625   * // Below code should be repeated in Each core
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   626   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   627   * // Upon reaching Synchonisation point
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   628   * IfxCpu_emitEvent(&event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   629   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   630   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   631   * \endcode
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   632   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   633   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   634  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   635  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   636  /** \brief This function sets a bit corresponding to the core in the event.
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   637   * \param event Synchronous Event
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   638   * \return None
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   639   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   640   * A coding example can be found in \ref IfxCpu_waitEvent
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   641   *
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   642   */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   643  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   644  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   645  /** \} */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   646  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   647  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   648  /*---------------------Inline Function Implementations------------------------*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   649  /******************************************************************************/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   650  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   652  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   653      Ifx_CPU_ICR reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   654      reg.U = __mfcr(CPU_ICR);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   655      return reg.B.IE != 0;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   656  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   657  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   658  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   659  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   660  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   661      boolean enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   662      enabled = IfxCpu_areInterruptsEnabled();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   663      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   664      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   665      return enabled;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   666  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   667  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   668  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_INLINE void IfxCpu_enableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   670  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   671      __enable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   672  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   673  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   674  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   675  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   676  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   677      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   678      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   679      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   680      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   681  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   682      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   683      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   684      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   685  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   686      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   687      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   688          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   689      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   690  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   691      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   692  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   693      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   694  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   695      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   696      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   697      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   698      /*Write to PMA0 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   699      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   700      __mtcr(CPU_PMA0, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   701      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   702      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   703  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   704  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   705  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   707  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   708      uint32 cpu_pmaVal;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   709      uint16 checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   710      uint32 coreIndex   = IfxCpu_getCoreIndex();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   711      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   712  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   713      /*resolve the restrictions*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   714      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   715      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   716  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   717      if ((segmentNumberMask & checkRestrictionMask) != 0)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   718      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   719          segmentNumberMask |= checkRestrictionMask;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   720      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   721  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   722      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   723  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   724      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   725  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   726      /*The CPU_PMA registers are ENDINIT protected*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   727      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   728      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   729      /*Write to PMA1 register for selecting the cacheability for data cache*/
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   730      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   731      __mtcr(CPU_PMA1, cpu_pmaVal);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   732      __isync();      /* ISYNC instruction executed immediately following MTCR */
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   733      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   734  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   735  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   736  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   737  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   738  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   739      __disable();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   740      __nop();
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   741  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   742  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   743  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   744  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   745  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   746      Ifx_CPU *module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   747  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   748      if (cpu < IfxCpu_ResourceCpu_none)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   749      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   750          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   751      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   752      else
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   753      {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   754          module = NULL_PTR;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   755      }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   756  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   757      return module;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   758  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   759  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   760  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   761  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   762  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   763      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   764  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   765  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   766  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   767  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   768  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   769      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   770  }
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   771  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   772  
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   773  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   774  {
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   775      Ifx_CPU_CORE_ID reg;
; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   776      reg.U = __mfcr(CPU_CORE_ID);
	mfcr	d15,#65052
.L256:

; G:\Car-Competition\LQ_TC26xB_LIBtasking20200616\LQ_TC26xB_LIBtasking\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Std\IfxCpu.h	   777      return (IfxCpu_Id)reg.B.CORE_ID;
	fcall	.cocofun_1
.L227:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   260  p_Class_nonMaskableInterrupt, tin);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   261      IFX_CFG_CPU_TRAP_NMI_HOOK(trapWatch);    
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   262      __asm("rslcx"); /* Restore lower context before returning. lower context was stored in the trap vector */
	st.d	[a10]0,e0
.L220:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   263      __asm("rfe");
	ld.d	e0,[a10]0
.L258:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   264  }
	rslcx
.L339:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   265  
	rfe
.L340:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   266  
	ret
.L215:
	
__IfxCpu_Trap_nonMaskableInterrupt_function_end:
	.size	IfxCpu_Trap_nonMaskableInterrupt,__IfxCpu_Trap_nonMaskableInterrupt_function_end-IfxCpu_Trap_nonMaskableInterrupt
.L74:
	; End of function
	
	.sdecl	'.text.traptab_cpu0',code,cluster('IfxCpu_Trap_vectorTable0'),protect
	.sect	'.text.traptab_cpu0'
	.align	2
	
	.global	IfxCpu_Trap_vectorTable0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   267  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   268  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   269  #pragma section ".traptab_cpu0" awx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   270  #pragma GCC optimize ("O2")
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   271  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   272  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   273  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   274  #pragma section CODE ".traptab_cpu0" X
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   275  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   276  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   277  #pragma protect on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   278  #pragma section code "traptab_cpu0"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   279  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   280  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   281  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   282  #pragma ghs section text=".traptab_cpu0"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   283  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   284  void IfxCpu_Trap_vectorTable0(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   285  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   286      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_memoryManagementError);
; Function IfxCpu_Trap_vectorTable0
.L23:
IfxCpu_Trap_vectorTable0:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   287      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_internalProtectionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   288      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_instructionError);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_memoryManagementError)
	lea	a15,[a15]@los(IfxCpu_Trap_memoryManagementError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L345:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   289      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_contextManagementError);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_internalProtectionError)
	lea	a15,[a15]@los(IfxCpu_Trap_internalProtectionError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L346:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   290      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_busError);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_instructionError)
	lea	a15,[a15]@los(IfxCpu_Trap_instructionError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L347:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   291      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_assertion);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_contextManagementError)
	lea	a15,[a15]@los(IfxCpu_Trap_contextManagementError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L348:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   292      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_systemCall_Cpu0);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_busError)
	lea	a15,[a15]@los(IfxCpu_Trap_busError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L349:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   293      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_nonMaskableInterrupt);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_assertion)
	lea	a15,[a15]@los(IfxCpu_Trap_assertion)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L350:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   294  }
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_systemCall_Cpu0)
	lea	a15,[a15]@los(IfxCpu_Trap_systemCall_Cpu0)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L351:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   295  
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_nonMaskableInterrupt)
	lea	a15,[a15]@los(IfxCpu_Trap_nonMaskableInterrupt)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L352:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   296  
	ret
.L229:
	
__IfxCpu_Trap_vectorTable0_function_end:
	.size	IfxCpu_Trap_vectorTable0,__IfxCpu_Trap_vectorTable0_function_end-IfxCpu_Trap_vectorTable0
.L79:
	; End of function
	
	.sdecl	'.text.traptab_cpu1',code,cluster('IfxCpu_Trap_vectorTable1'),protect
	.sect	'.text.traptab_cpu1'
	.align	2
	
	.global	IfxCpu_Trap_vectorTable1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   297  #if IFXCPU_NUM_MODULES >= 2
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   298  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   299  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   300  #pragma section ".traptab_cpu1" awx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   301  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   302  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   303  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   304  #pragma section CODE ".traptab_cpu1" X
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   305  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   306  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   307  #pragma section code "traptab_cpu1"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   308  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   309  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   310  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   311  #pragma ghs section text=".traptab_cpu1"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   312  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   313  void IfxCpu_Trap_vectorTable1(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   314  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   315      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_memoryManagementError);
; Function IfxCpu_Trap_vectorTable1
.L25:
IfxCpu_Trap_vectorTable1:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   316      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_internalProtectionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   317      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_instructionError);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_memoryManagementError)
	lea	a15,[a15]@los(IfxCpu_Trap_memoryManagementError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L357:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   318      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_contextManagementError);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_internalProtectionError)
	lea	a15,[a15]@los(IfxCpu_Trap_internalProtectionError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L358:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   319      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_busError);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_instructionError)
	lea	a15,[a15]@los(IfxCpu_Trap_instructionError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L359:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   320      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_assertion);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_contextManagementError)
	lea	a15,[a15]@los(IfxCpu_Trap_contextManagementError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L360:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   321      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_systemCall_Cpu1);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_busError)
	lea	a15,[a15]@los(IfxCpu_Trap_busError)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L361:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   322      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_nonMaskableInterrupt);
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_assertion)
	lea	a15,[a15]@los(IfxCpu_Trap_assertion)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L362:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   323  }
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_systemCall_Cpu1)
	lea	a15,[a15]@los(IfxCpu_Trap_systemCall_Cpu1)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L363:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   324  
	 .align 32
	movh.a	a15,#@his(IfxCpu_Trap_nonMaskableInterrupt)
	lea	a15,[a15]@los(IfxCpu_Trap_nonMaskableInterrupt)
	
	svlcx
	mov	d4,d15
	ji	a15

	
.L364:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   325  
	ret
.L230:
	
__IfxCpu_Trap_vectorTable1_function_end:
	.size	IfxCpu_Trap_vectorTable1,__IfxCpu_Trap_vectorTable1_function_end-IfxCpu_Trap_vectorTable1
.L84:
	; End of function
	
	.calls	'__INDIRECT__','IfxCpu_Trap_memoryManagementError'
	.calls	'__INDIRECT__','IfxCpu_Trap_internalProtectionError'
	.calls	'__INDIRECT__','IfxCpu_Trap_instructionError'
	.calls	'__INDIRECT__','IfxCpu_Trap_contextManagementError'
	.calls	'__INDIRECT__','IfxCpu_Trap_busError'
	.calls	'__INDIRECT__','IfxCpu_Trap_assertion'
	.calls	'__INDIRECT__','IfxCpu_Trap_systemCall_Cpu0'
	.calls	'__INDIRECT__','IfxCpu_Trap_systemCall_Cpu1'
	.calls	'__INDIRECT__','IfxCpu_Trap_nonMaskableInterrupt'
	.calls	'IfxCpu_Trap_memoryManagementError','.cocofun_1'
	.calls	'IfxCpu_Trap_internalProtectionError','.cocofun_1'
	.calls	'IfxCpu_Trap_instructionError','.cocofun_1'
	.calls	'IfxCpu_Trap_contextManagementError','.cocofun_1'
	.calls	'IfxCpu_Trap_busError','.cocofun_1'
	.calls	'IfxCpu_Trap_assertion','.cocofun_1'
	.calls	'IfxCpu_Trap_systemCall_Cpu0','.cocofun_1'
	.calls	'IfxCpu_Trap_systemCall_Cpu1','.cocofun_1'
	.calls	'IfxCpu_Trap_nonMaskableInterrupt','.cocofun_1'
	.calls	'IfxCpu_Trap_memoryManagementError','',8
	.calls	'.cocofun_1','',0
	.calls	'IfxCpu_Trap_internalProtectionError','',8
	.calls	'IfxCpu_Trap_instructionError','',8
	.calls	'IfxCpu_Trap_contextManagementError','',8
	.calls	'IfxCpu_Trap_busError','',8
	.calls	'IfxCpu_Trap_assertion','',8
	.calls	'IfxCpu_Trap_systemCall_Cpu0','',8
	.calls	'IfxCpu_Trap_systemCall_Cpu1','',8
	.calls	'IfxCpu_Trap_nonMaskableInterrupt','',8
	.calls	'IfxCpu_Trap_vectorTable0','',0
	.extern	__INDIRECT__
	.calls	'IfxCpu_Trap_vectorTable1','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L27:
	.word	79772
	.half	3
	.word	.L28
	.byte	4
.L26:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L29
	.byte	2,1,1,3
	.word	193
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	196
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	241
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	253
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0,9
	.byte	'void',0,3
	.word	339
.L105:
	.byte	8
	.byte	'Ifx__getA11',0,3,1,220,2,18
	.word	345
	.byte	1,1
.L107:
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,8
	.byte	'__ld64',0,3,2,135,1,19
	.word	376
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	345
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	345
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	376
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	506
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	506
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	522
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	658
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	697
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	658
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	941
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	618
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	901
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1132
	.byte	4,2,35,8,0,14
	.word	1172
	.byte	3
	.word	1235
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1240
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	675
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1240
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	675
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	675
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1240
	.byte	6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,11
	.byte	'P0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,181,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1470
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,11
	.byte	'PS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,133,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1786
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,11
	.byte	'MODREV',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,148,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2357
	.byte	4,2,35,0,0,15,4
	.word	658
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	658
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	658
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	658
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	658
	.byte	5,0,2,35,3,0,12,6,164,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2485
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	658
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	658
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	658
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	658
	.byte	5,0,2,35,3,0,12,6,180,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2700
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	658
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	658
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	658
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	658
	.byte	5,0,2,35,3,0,12,6,188,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2915
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	658
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	658
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	658
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	658
	.byte	5,0,2,35,3,0,12,6,172,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3132
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,11
	.byte	'P0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,156,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3352
	.byte	4,2,35,0,0,15,24
	.word	658
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,11
	.byte	'PD0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	658
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	658
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	658
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	658
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	658
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,205,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3675
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,11
	.byte	'PD8',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	658
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	658
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	658
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	658
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	658
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,213,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3979
	.byte	4,2,35,0,0,15,8
	.word	658
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,11
	.byte	'EN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,140,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4304
	.byte	4,2,35,0,0,15,12
	.word	658
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,197,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4644
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	483
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,189,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5010
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,11
	.byte	'PS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,12,6,149,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5296
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,12,6,165,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5443
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	483
	.byte	20,0,2,35,0,0,12,6,173,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5612
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	675
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,157,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5784
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	675
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	675
	.byte	12,0,2,35,2,0,12,6,229,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5959
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	8,0,2,35,3,0,12,6,245,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6133
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	4,0,2,35,3,0,12,6,253,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6307
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,237,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6483
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,11
	.byte	'PS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,141,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6639
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	675
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,221,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6972
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,12,6,196,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7320
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	658
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,12,6,204,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7444
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7528
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	658
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,12,6,213,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7708
	.byte	4,2,35,0,0,15,76
	.word	658
	.byte	16,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,12,6,132,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7961
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	658
	.byte	1,0,2,35,3,0,12,6,252,3,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8048
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,229,5,25,128,2,13
	.byte	'OUT',0
	.word	1746
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2317
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2436
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2476
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2660
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	2875
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3092
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3312
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2476
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3626
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3666
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	3939
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4255
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4295
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4595
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4635
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	4970
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5256
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4295
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5403
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5572
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5744
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	5919
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6093
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6267
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6443
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6599
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	6932
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7280
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4295
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7404
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7653
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	7912
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	7952
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8008
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8575
	.byte	4,3,35,252,1,0,14
	.word	8615
	.byte	3
	.word	9218
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1,5
	.byte	'port',0,5,208,4,44
	.word	9223
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	658
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	9228
	.byte	6,0,17,8,127,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_none',0,2,0
.L110:
	.byte	8
	.byte	'IfxCpu_getCoreId',0,3,7,133,6,22
	.word	9409
	.byte	1,1
.L113:
	.byte	6,0,17,8,156,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,7,141,6,31
	.word	9491
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,139,5,20
	.word	658
	.byte	1,1,6,0
.L91:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,161,6,19
	.word	9646
	.byte	1,1,5
	.byte	'address',0,7,161,6,55
	.word	675
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,190,6,20
	.word	658
	.byte	1,1,5
	.byte	'address',0,7,190,6,70
	.word	675
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,172,8,17,1,1,5
	.byte	'address',0,7,172,8,56
	.word	9646
	.byte	5
	.byte	'count',0,7,172,8,72
	.word	9646
	.byte	19,6,0,0
.L103:
	.byte	20,10,186,1,9,8,13
	.byte	'tAddr',0
	.word	483
	.byte	4,2,35,0,11
	.byte	'tId',0,1
	.word	658
	.byte	8,0,2,35,4,11
	.byte	'tClass',0,1
	.word	658
	.byte	8,0,2,35,5,11
	.byte	'tCpu',0,1
	.word	658
	.byte	3,5,2,35,6,0
.L95:
	.byte	8
	.byte	'IfxCpu_Trap_extractTrapInfo',0,3,9,118,24
	.word	9877
	.byte	1,1
.L98:
	.byte	5
	.byte	'trapClass',0,9,118,58
	.word	658
.L100:
	.byte	5
	.byte	'tin',0,9,118,76
	.word	9646
.L102:
	.byte	19,6,6,0,0,21
	.word	499
	.byte	22
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,23
	.word	10022
	.byte	0,14
	.word	483
.L108:
	.byte	3
	.word	483
	.byte	24
	.byte	'__cmpswapw',0
	.word	10064
	.byte	1,1,1,1,25
	.byte	'p',0
	.word	10069
	.byte	25
	.byte	'value',0
	.word	483
	.byte	25
	.byte	'compare',0
	.word	483
	.byte	0,14
	.word	499
	.byte	24
	.byte	'__mfcr',0
	.word	10126
	.byte	1,1,1,1,23
	.word	499
	.byte	0,26
	.byte	'__debug',0,1,1,1,1,27
	.word	201
	.byte	28
	.word	227
	.byte	6,0,27
	.word	262
	.byte	28
	.word	294
	.byte	6,0,27
	.word	307
	.byte	6,0,27
	.word	350
	.byte	6,0,27
	.word	402
	.byte	28
	.word	421
	.byte	6,0,27
	.word	437
	.byte	28
	.word	452
	.byte	28
	.word	466
	.byte	6,0,27
	.word	1245
	.byte	28
	.word	1285
	.byte	28
	.word	1303
	.byte	6,0,27
	.word	1323
	.byte	28
	.word	1361
	.byte	28
	.word	1379
	.byte	6,0,27
	.word	1399
	.byte	28
	.word	1450
	.byte	6,0,27
	.word	9331
	.byte	28
	.word	9359
	.byte	28
	.word	9373
	.byte	28
	.word	9391
	.byte	6,0,27
	.word	9460
	.byte	6,0,27
	.word	9570
	.byte	6,0,27
	.word	9604
	.byte	6,0,27
	.word	9667
	.byte	28
	.word	9708
	.byte	6,0,27
	.word	9727
	.byte	28
	.word	9782
	.byte	6,0,27
	.word	9801
	.byte	28
	.word	9841
	.byte	28
	.word	9858
	.byte	19,6,0,0,27
	.word	9948
	.byte	28
	.word	9987
	.byte	28
	.word	10005
	.byte	19,29
	.word	350
	.byte	30
	.word	374
	.byte	0,6,29
	.word	9460
	.byte	30
	.word	9489
	.byte	0,6,0,0
.L93:
	.byte	14
	.word	9877
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,11,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	506
	.byte	29,0,2,35,0,0
.L115:
	.byte	12,11,223,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10412
	.byte	4,2,35,0,0
.L119:
	.byte	14
	.word	9877
.L133:
	.byte	14
	.word	9877
.L147:
	.byte	14
	.word	9877
.L161:
	.byte	14
	.word	9877
.L175:
	.byte	14
	.word	9877
.L189:
	.byte	14
	.word	9877
.L203:
	.byte	14
	.word	9877
.L217:
	.byte	14
	.word	9877
	.byte	31
	.byte	'__INDIRECT__',0,9,1,1,1,1,1,7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,9,1,1
	.word	10581
	.byte	32
	.byte	'__size_t',0,9,1,1
	.word	483
	.byte	32
	.byte	'__ptrdiff_t',0,9,1,1
	.word	499
	.byte	33,1,3
	.word	10649
	.byte	32
	.byte	'__codeptr',0,9,1,1
	.word	10651
	.byte	32
	.byte	'boolean',0,12,101,29
	.word	658
	.byte	32
	.byte	'uint8',0,12,105,29
	.word	658
	.byte	32
	.byte	'uint16',0,12,109,29
	.word	675
	.byte	32
	.byte	'uint32',0,12,113,29
	.word	9646
	.byte	32
	.byte	'uint64',0,12,118,29
	.word	376
	.byte	32
	.byte	'sint16',0,12,126,29
	.word	10581
	.byte	7
	.byte	'long int',0,4,5,32
	.byte	'sint32',0,12,131,1,29
	.word	10764
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,12,139,1,29
	.word	10792
	.byte	32
	.byte	'float32',0,12,168,1,29
	.word	253
	.byte	32
	.byte	'pvoid',0,13,57,28
	.word	345
	.byte	32
	.byte	'Ifx_TickTime',0,13,79,28
	.word	10792
	.byte	17,13,130,1,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,13,140,1,3
	.word	10877
	.byte	17,10,89,9,1,18
	.byte	'IfxCpu_Trap_MemoryManagement_Id_virtualAddressFill',0,0,18
	.byte	'IfxCpu_Trap_MemoryManagement_Id_virtualAddressProtection',0,1,0,32
	.byte	'IfxCpu_Trap_MemoryManagement_Id',0,10,93,3
	.word	11015
	.byte	17,10,98,9,1,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_privilegeViolation',0,1,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_memoryProtectionRead',0,2,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_memoryProtectionWrite',0,3,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_memoryProtectionExecute',0,4,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_memoryProtectionPeripheralAccess',0,5,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_memoryProtectionNullAddress',0,6,18
	.byte	'IfxCpu_Trap_InternalProtection_Id_globalRegisterWriteProtection',0,7,0,32
	.byte	'IfxCpu_Trap_InternalProtection_Id',0,10,107,3
	.word	11173
	.byte	17,10,112,9,1,18
	.byte	'IfxCpu_Trap_InstructionErrors_Id_illegalOpcode',0,1,18
	.byte	'IfxCpu_Trap_InstructionErrors_Id_unimplementedOpcode',0,2,18
	.byte	'IfxCpu_Trap_InstructionErrors_Id_invalidOperand',0,3,18
	.byte	'IfxCpu_Trap_InstructionErrors_Id_dataAddressAlignment',0,4,18
	.byte	'IfxCpu_Trap_InstructionErrors_Id_invalidMemoryAddress',0,5,0,32
	.byte	'IfxCpu_Trap_InstructionErrors_Id',0,10,119,3
	.word	11650
	.byte	17,10,124,9,1,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_freeContextListDepletion',0,1,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_callDepthOverflow',0,2,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_callDepthUnderflow',0,3,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_freeContextListUnderflow',0,4,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_callStackUnderflow',0,5,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_contextType',0,6,18
	.byte	'IfxCpu_Trap_ContextManagement_Id_nestingError',0,7,0,32
	.byte	'IfxCpu_Trap_ContextManagement_Id',0,10,133,1,3
	.word	11963
	.byte	17,10,138,1,9,1,18
	.byte	'IfxCpu_Trap_Bus_Id_programFetchSynchronousError',0,1,18
	.byte	'IfxCpu_Trap_Bus_Id_dataAccessSynchronousError',0,2,18
	.byte	'IfxCpu_Trap_Bus_Id_dataAccessAsynchronousError',0,3,18
	.byte	'IfxCpu_Trap_Bus_Id_CoprocessorTrapAsynchronousError',0,4,18
	.byte	'IfxCpu_Trap_Bus_Id_programMemoryIntegrityError',0,5,18
	.byte	'IfxCpu_Trap_Bus_Id_dataMemoryIntegrityError',0,6,18
	.byte	'IfxCpu_Trap_Bus_Id_temporalAsynchronousError',0,7,0,32
	.byte	'IfxCpu_Trap_Bus_Id',0,10,147,1,3
	.word	12387
	.byte	17,10,152,1,9,1,18
	.byte	'IfxCpu_Trap_Assertion_Id_arithmeticOverflow',0,1,18
	.byte	'IfxCpu_Trap_Assertion_Id_stickyArithmeticOverflow',0,2,0,32
	.byte	'IfxCpu_Trap_Assertion_Id',0,10,156,1,3
	.word	12765
	.byte	32
	.byte	'IfxCpu_Trap_SystemCall_Id',0,10,161,1,16
	.word	10764
	.byte	32
	.byte	'IfxCpu_Trap_NonMaskableInterrupt_Id',0,10,166,1,16
	.word	10764
	.byte	32
	.byte	'IfxCpu_Trap',0,10,192,1,3
	.word	9877
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,11,45,16,4,11
	.byte	'ADDR',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,11,48,3
	.word	13005
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,11,51,16,4,11
	.byte	'VSS',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	506
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,11,55,3
	.word	13066
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,11,58,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	506
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,11,62,3
	.word	13145
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,11,65,16,4,11
	.byte	'CountValue',0,4
	.word	506
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,11,69,3
	.word	13231
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,11,72,16,4,11
	.byte	'CM',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	506
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	506
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	506
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	506
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,11,80,3
	.word	13320
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,11,83,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	506
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,11,89,3
	.word	13466
	.byte	32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,11,96,3
	.word	10412
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,11,99,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	506
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,11,103,3
	.word	13622
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,11,106,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	506
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,11,110,3
	.word	13715
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,11,113,16,4,11
	.byte	'MODREV',0,4
	.word	506
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	506
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,11,118,3
	.word	13808
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,11,121,16,4,11
	.byte	'XE',0,4
	.word	506
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	506
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,11,125,3
	.word	13915
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,11,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	506
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	506
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	506
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,11,136,1,3
	.word	14002
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,11,139,1,16,4,11
	.byte	'CID',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	506
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,11,143,1,3
	.word	14156
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,11,146,1,16,4,11
	.byte	'DATA',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,11,149,1,3
	.word	14250
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,11,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	506
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	506
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	506
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	506
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	506
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	506
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,11,163,1,3
	.word	14313
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,11,166,1,16,4,11
	.byte	'DE',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	506
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	506
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	506
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	506
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	506
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	506
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,11,177,1,3
	.word	14531
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,11,180,1,16,4,11
	.byte	'DTA',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	506
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,11,184,1,3
	.word	14746
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,11,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	506
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,11,192,1,3
	.word	14840
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,11,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,11,199,1,3
	.word	14956
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,11,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	506
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,11,206,1,3
	.word	15057
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,11,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,11,212,1,3
	.word	15150
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,11,215,1,16,4,11
	.byte	'TA',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,11,218,1,3
	.word	15230
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,11,221,1,16,4,11
	.byte	'IED',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	506
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	506
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	506
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	506
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	506
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,11,233,1,3
	.word	15299
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,11,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	506
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,11,240,1,3
	.word	15528
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,11,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	506
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,11,247,1,3
	.word	15621
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,11,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	506
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,11,254,1,3
	.word	15716
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,11,129,2,16,4,11
	.byte	'RE',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,11,133,2,3
	.word	15811
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,11,136,2,16,4,11
	.byte	'WE',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,11,140,2,3
	.word	15901
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,11,143,2,16,4,11
	.byte	'SRE',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	506
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	506
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	506
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	506
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	506
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	506
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	506
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	506
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	506
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	506
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	506
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	506
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	506
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,11,161,2,3
	.word	15991
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,11,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	506
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	506
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	506
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,11,172,2,3
	.word	16315
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,11,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	506
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	506
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,11,180,2,3
	.word	16469
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,11,183,2,16,4,11
	.byte	'TST',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	506
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	506
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	506
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	506
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	506
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	506
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	506
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	506
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	506
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	506
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	506
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	506
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	506
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	506
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,11,202,2,3
	.word	16575
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,11,205,2,16,4,11
	.byte	'OPC',0,4
	.word	506
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	506
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	506
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	506
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	506
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,11,212,2,3
	.word	16924
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,11,215,2,16,4,11
	.byte	'PC',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,11,218,2,3
	.word	17084
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,11,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,11,224,2,3
	.word	17165
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,11,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,11,230,2,3
	.word	17252
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,11,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,11,236,2,3
	.word	17339
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,11,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	506
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,11,243,2,3
	.word	17426
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,11,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	506
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	506
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	506
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	506
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	506
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,11,253,2,3
	.word	17517
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,11,128,3,16,4,11
	.byte	'ISP',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,11,131,3,3
	.word	17660
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,11,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	506
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	506
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,11,139,3,3
	.word	17726
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,11,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	506
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,11,146,3,3
	.word	17832
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,11,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	506
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,11,153,3,3
	.word	17925
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,11,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	506
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,11,160,3,3
	.word	18018
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,11,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	506
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,11,167,3,3
	.word	18111
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,11,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	506
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,11,175,3,3
	.word	18196
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,11,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	506
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,11,183,3,3
	.word	18312
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,11,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,11,190,3,3
	.word	18423
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,11,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	506
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	506
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	506
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	506
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,11,200,3,3
	.word	18524
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,11,203,3,16,4,11
	.byte	'TA',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,11,206,3,3
	.word	18654
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,11,209,3,16,4,11
	.byte	'IED',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	506
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	506
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	506
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	506
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	506
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,11,221,3,3
	.word	18723
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,11,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	506
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,11,229,3,3
	.word	18952
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,11,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	506
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	506
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,11,237,3,3
	.word	19065
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,11,240,3,16,4,11
	.byte	'PSI',0,4
	.word	506
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,11,244,3,3
	.word	19178
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,11,247,3,16,4,11
	.byte	'FRE',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	506
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	506
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	506
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	506
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	506
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,11,129,4,3
	.word	19269
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,11,132,4,16,4,11
	.byte	'CDC',0,4
	.word	506
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	506
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	506
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	506
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	506
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	506
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	506
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	506
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	506
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	506
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	506
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	506
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,11,147,4,3
	.word	19472
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,11,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	506
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	506
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	506
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	506
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,11,156,4,3
	.word	19715
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,11,159,4,16,4,11
	.byte	'PC',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	506
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	506
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	506
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	506
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	506
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	506
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	506
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,11,171,4,3
	.word	19843
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,11,174,4,16,4,11
	.byte	'EN',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,11,177,4,3
	.word	20084
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,11,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,11,183,4,3
	.word	20167
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,11,186,4,16,4,11
	.byte	'EN',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,11,189,4,3
	.word	20258
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,11,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,11,195,4,3
	.word	20349
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,11,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	483
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,11,202,4,3
	.word	20448
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,11,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	483
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,11,209,4,3
	.word	20555
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,11,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	506
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	506
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	506
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,11,220,4,3
	.word	20662
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,11,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	506
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,11,231,4,3
	.word	20816
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,11,234,4,16,4,11
	.byte	'ASI',0,4
	.word	506
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	506
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,11,238,4,3
	.word	20977
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,11,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	506
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	506
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	506
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,11,249,4,3
	.word	21075
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,11,252,4,16,4,11
	.byte	'Timer',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,11,255,4,3
	.word	21247
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,11,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	506
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,11,133,5,3
	.word	21327
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,11,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	506
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	506
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	506
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	506
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	506
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	506
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	506
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	506
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	506
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	506
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	506
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	506
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	506
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,11,153,5,3
	.word	21400
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,11,156,5,16,4,11
	.byte	'T0',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	506
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	506
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	506
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	506
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	506
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	506
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	506
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,11,167,5,3
	.word	21718
	.byte	12,11,175,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13005
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,11,180,5,3
	.word	21913
	.byte	12,11,183,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13066
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,11,188,5,3
	.word	21972
	.byte	12,11,191,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13145
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,11,196,5,3
	.word	22033
	.byte	12,11,199,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13231
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,11,204,5,3
	.word	22094
	.byte	12,11,207,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13320
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,11,212,5,3
	.word	22156
	.byte	12,11,215,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13466
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,11,220,5,3
	.word	22219
	.byte	32
	.byte	'Ifx_CPU_CORE_ID',0,11,228,5,3
	.word	10481
	.byte	12,11,231,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13622
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,11,236,5,3
	.word	22308
	.byte	12,11,239,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,11,244,5,3
	.word	22371
	.byte	12,11,247,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13808
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,11,252,5,3
	.word	22434
	.byte	12,11,255,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13915
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,11,132,6,3
	.word	22498
	.byte	12,11,135,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14002
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,11,140,6,3
	.word	22560
	.byte	12,11,143,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14156
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,11,148,6,3
	.word	22623
	.byte	12,11,151,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14250
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,11,156,6,3
	.word	22687
	.byte	12,11,159,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14313
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,11,164,6,3
	.word	22746
	.byte	12,11,167,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14531
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,11,172,6,3
	.word	22808
	.byte	12,11,175,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14746
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,11,180,6,3
	.word	22871
	.byte	12,11,183,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14840
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,11,188,6,3
	.word	22935
	.byte	12,11,191,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14956
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,11,196,6,3
	.word	22998
	.byte	12,11,199,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15057
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,11,204,6,3
	.word	23061
	.byte	12,11,207,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15150
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,11,212,6,3
	.word	23122
	.byte	12,11,215,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15230
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,11,220,6,3
	.word	23185
	.byte	12,11,223,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15299
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,11,228,6,3
	.word	23248
	.byte	12,11,231,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15528
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,11,236,6,3
	.word	23311
	.byte	12,11,239,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15621
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,11,244,6,3
	.word	23372
	.byte	12,11,247,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15716
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,11,252,6,3
	.word	23435
	.byte	12,11,255,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15811
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,11,132,7,3
	.word	23498
	.byte	12,11,135,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15901
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,11,140,7,3
	.word	23560
	.byte	12,11,143,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15991
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,11,148,7,3
	.word	23622
	.byte	12,11,151,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16315
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,11,156,7,3
	.word	23684
	.byte	12,11,159,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16469
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,11,164,7,3
	.word	23747
	.byte	12,11,167,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16575
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,11,172,7,3
	.word	23808
	.byte	12,11,175,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16924
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,11,180,7,3
	.word	23878
	.byte	12,11,183,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17084
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,11,188,7,3
	.word	23948
	.byte	12,11,191,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17165
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,11,196,7,3
	.word	24017
	.byte	12,11,199,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17252
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,11,204,7,3
	.word	24088
	.byte	12,11,207,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17339
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,11,212,7,3
	.word	24159
	.byte	12,11,215,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17426
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,11,220,7,3
	.word	24230
	.byte	12,11,223,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17517
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,11,228,7,3
	.word	24292
	.byte	12,11,231,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17660
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,11,236,7,3
	.word	24353
	.byte	12,11,239,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17726
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,11,244,7,3
	.word	24414
	.byte	12,11,247,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17832
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,11,252,7,3
	.word	24475
	.byte	12,11,255,7,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17925
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,11,132,8,3
	.word	24538
	.byte	12,11,135,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18018
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,11,140,8,3
	.word	24601
	.byte	12,11,143,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18111
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,11,148,8,3
	.word	24664
	.byte	12,11,151,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18196
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,11,156,8,3
	.word	24724
	.byte	12,11,159,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18312
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,11,164,8,3
	.word	24787
	.byte	12,11,167,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18423
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,11,172,8,3
	.word	24850
	.byte	12,11,175,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18524
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,11,180,8,3
	.word	24913
	.byte	12,11,183,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18654
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,11,188,8,3
	.word	24975
	.byte	12,11,191,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18723
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,11,196,8,3
	.word	25038
	.byte	12,11,199,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18952
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,11,204,8,3
	.word	25101
	.byte	12,11,207,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19065
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,11,212,8,3
	.word	25163
	.byte	12,11,215,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19178
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,11,220,8,3
	.word	25225
	.byte	12,11,223,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19269
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,11,228,8,3
	.word	25287
	.byte	12,11,231,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19472
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,11,236,8,3
	.word	25349
	.byte	12,11,239,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,11,244,8,3
	.word	25410
	.byte	12,11,247,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19843
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,11,252,8,3
	.word	25473
	.byte	12,11,255,8,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20084
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,11,132,9,3
	.word	25537
	.byte	12,11,135,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20167
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,11,140,9,3
	.word	25607
	.byte	12,11,143,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20258
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,11,148,9,3
	.word	25677
	.byte	12,11,151,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20349
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,11,156,9,3
	.word	25751
	.byte	12,11,159,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20448
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,11,164,9,3
	.word	25825
	.byte	12,11,167,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20555
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,11,172,9,3
	.word	25895
	.byte	12,11,175,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20662
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,11,180,9,3
	.word	25965
	.byte	12,11,183,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20816
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,11,188,9,3
	.word	26028
	.byte	12,11,191,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20977
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,11,196,9,3
	.word	26092
	.byte	12,11,199,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21075
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,11,204,9,3
	.word	26158
	.byte	12,11,207,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,11,212,9,3
	.word	26223
	.byte	12,11,215,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21327
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,11,220,9,3
	.word	26290
	.byte	12,11,223,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21400
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,11,228,9,3
	.word	26354
	.byte	12,11,231,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21718
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,11,236,9,3
	.word	26418
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,11,247,9,25,8,13
	.byte	'L',0
	.word	22308
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	22371
	.byte	4,2,35,4,0,14
	.word	26484
	.byte	32
	.byte	'Ifx_CPU_CPR',0,11,251,9,3
	.word	26526
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,11,254,9,25,8,13
	.byte	'L',0
	.word	23372
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	23435
	.byte	4,2,35,4,0,14
	.word	26552
	.byte	32
	.byte	'Ifx_CPU_DPR',0,11,130,10,3
	.word	26594
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,11,133,10,25,16,13
	.byte	'LA',0
	.word	25825
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	25895
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	25677
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	25751
	.byte	4,2,35,12,0,14
	.word	26620
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,11,139,10,3
	.word	26702
	.byte	15,12
	.word	26223
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,11,142,10,25,16,13
	.byte	'CON',0
	.word	26158
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	26734
	.byte	12,2,35,4,0,14
	.word	26743
	.byte	32
	.byte	'Ifx_CPU_TPS',0,11,146,10,3
	.word	26791
	.byte	10
	.byte	'_Ifx_CPU_TR',0,11,149,10,25,8,13
	.byte	'EVT',0
	.word	26354
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	26290
	.byte	4,2,35,4,0,14
	.word	26817
	.byte	32
	.byte	'Ifx_CPU_TR',0,11,153,10,3
	.word	26862
	.byte	15,176,32
	.word	658
	.byte	16,175,32,0,15,208,223,1
	.word	658
	.byte	16,207,223,1,0,15,248,1
	.word	658
	.byte	16,247,1,0,15,244,29
	.word	658
	.byte	16,243,29,0,15,188,3
	.word	658
	.byte	16,187,3,0,15,232,3
	.word	658
	.byte	16,231,3,0,15,252,23
	.word	658
	.byte	16,251,23,0,15,228,63
	.word	658
	.byte	16,227,63,0,15,128,1
	.word	26552
	.byte	16,15,0,14
	.word	26977
	.byte	15,128,31
	.word	658
	.byte	16,255,30,0,15,64
	.word	26484
	.byte	16,7,0,14
	.word	27003
	.byte	15,192,31
	.word	658
	.byte	16,191,31,0,15,16
	.word	22498
	.byte	16,3,0,15,16
	.word	23498
	.byte	16,3,0,15,16
	.word	23560
	.byte	16,3,0,15,208,7
	.word	658
	.byte	16,207,7,0,14
	.word	26743
	.byte	15,240,23
	.word	658
	.byte	16,239,23,0,15,64
	.word	26817
	.byte	16,7,0,14
	.word	27082
	.byte	15,192,23
	.word	658
	.byte	16,191,23,0,15,232,1
	.word	658
	.byte	16,231,1,0,15,28
	.word	658
	.byte	16,27,0,15,180,1
	.word	658
	.byte	16,179,1,0,15,16
	.word	658
	.byte	16,15,0,15,172,1
	.word	658
	.byte	16,171,1,0,15,64
	.word	22687
	.byte	16,15,0,15,64
	.word	658
	.byte	16,63,0,15,64
	.word	21913
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,11,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	26887
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	25410
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	26898
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	26092
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	26911
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	25101
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	25163
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	25225
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	26922
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	22998
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4295
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	25473
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	23622
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2476
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	22746
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	23122
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	23185
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	23248
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	3666
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	22935
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	26933
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	25287
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	24787
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	24850
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	24724
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	24975
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	25038
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	26944
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	22219
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	26955
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	23808
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	23948
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	23878
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2476
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	24017
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	24088
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	24159
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	26966
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	26987
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	26992
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	27012
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	27017
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	27028
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	27037
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	27046
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	27055
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	27066
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	27071
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	27091
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	27096
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	22156
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	22094
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	24230
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	24475
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	24538
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	24601
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	27107
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	22808
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2476
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	23684
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	22560
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	25965
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	27118
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	26418
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	4635
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	23311
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	23061
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	22871
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	27127
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	24913
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	25349
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	24664
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4295
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	26028
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	22434
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	10481
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	21972
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	22033
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	24353
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	24292
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4295
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	23747
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	24414
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	27138
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	22623
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	27147
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	27158
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	27167
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	27176
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	27167
	.byte	64,4,35,192,255,3,0,14
	.word	27185
	.byte	32
	.byte	'Ifx_CPU',0,11,130,11,3
	.word	28976
	.byte	32
	.byte	'IfxCpu_Id',0,8,132,1,3
	.word	9409
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,8,161,1,3
	.word	9491
	.byte	10
	.byte	'_Ifx_SRC_SRCR_Bits',0,14,45,16,4,11
	.byte	'SRPN',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	658
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	658
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	658
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SRC_SRCR_Bits',0,14,62,3
	.word	29045
	.byte	12,14,70,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29045
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SRC_SRCR',0,14,75,3
	.word	29361
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,14,86,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	29421
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,14,89,3
	.word	29453
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,14,92,25,12,13
	.byte	'TX',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	29361
	.byte	4,2,35,8,0,14
	.word	29479
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,14,97,3
	.word	29538
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,14,100,25,4,13
	.byte	'SBSRC',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	29566
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,14,103,3
	.word	29603
	.byte	15,64
	.word	29361
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN',0,14,106,25,64,13
	.byte	'INT',0
	.word	29631
	.byte	64,2,35,0,0,14
	.word	29640
	.byte	32
	.byte	'Ifx_SRC_CAN',0,14,109,3
	.word	29672
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,14,112,25,16,13
	.byte	'SR0',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	29361
	.byte	4,2,35,12,0,14
	.word	29697
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,14,118,3
	.word	29769
	.byte	15,8
	.word	29361
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,14,121,25,8,13
	.byte	'SR',0
	.word	29795
	.byte	8,2,35,0,0,14
	.word	29804
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,14,124,3
	.word	29840
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,14,127,25,16,13
	.byte	'MI',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	29361
	.byte	4,2,35,12,0,14
	.word	29870
	.byte	32
	.byte	'Ifx_SRC_CIF',0,14,133,1,3
	.word	29943
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,14,136,1,25,4,13
	.byte	'SBSRC',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	29969
	.byte	32
	.byte	'Ifx_SRC_CPU',0,14,139,1,3
	.word	30004
	.byte	15,192,1
	.word	29361
	.byte	16,47,0,10
	.byte	'_Ifx_SRC_DMA',0,14,142,1,25,208,1,13
	.byte	'ERR',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4635
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	30030
	.byte	192,1,2,35,16,0,14
	.word	30040
	.byte	32
	.byte	'Ifx_SRC_DMA',0,14,147,1,3
	.word	30107
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,14,150,1,25,8,13
	.byte	'SRM',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	29361
	.byte	4,2,35,4,0,14
	.word	30133
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,14,154,1,3
	.word	30181
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,14,157,1,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	30209
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,14,160,1,3
	.word	30242
	.byte	15,40
	.word	658
	.byte	16,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,14,163,1,25,80,13
	.byte	'INT',0
	.word	29795
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	29795
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	29795
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	29795
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	29361
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	29361
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	30269
	.byte	40,2,35,40,0,14
	.word	30278
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,14,172,1,3
	.word	30405
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,14,175,1,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	30432
	.byte	32
	.byte	'Ifx_SRC_ETH',0,14,178,1,3
	.word	30464
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,14,181,1,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	30490
	.byte	32
	.byte	'Ifx_SRC_FCE',0,14,184,1,3
	.word	30522
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,14,187,1,25,12,13
	.byte	'DONE',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	29361
	.byte	4,2,35,8,0,14
	.word	30548
	.byte	32
	.byte	'Ifx_SRC_FFT',0,14,192,1,3
	.word	30608
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,14,195,1,25,32,13
	.byte	'SR0',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	29361
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	27138
	.byte	16,2,35,16,0,14
	.word	30634
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,14,202,1,3
	.word	30728
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,14,205,1,25,48,13
	.byte	'CIRQ',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	29361
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	29361
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	29361
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3666
	.byte	24,2,35,24,0,14
	.word	30755
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,14,214,1,3
	.word	30872
	.byte	15,12
	.word	29361
	.byte	16,2,0,15,32
	.word	29361
	.byte	16,7,0,15,32
	.word	30909
	.byte	16,0,0,15,88
	.word	658
	.byte	16,87,0,15,108
	.word	29361
	.byte	16,26,0,15,96
	.word	658
	.byte	16,95,0,15,96
	.word	30909
	.byte	16,2,0,15,160,3
	.word	658
	.byte	16,159,3,0,15,64
	.word	30909
	.byte	16,1,0,15,192,3
	.word	658
	.byte	16,191,3,0,15,16
	.word	29361
	.byte	16,3,0,15,64
	.word	30994
	.byte	16,3,0,15,192,2
	.word	658
	.byte	16,191,2,0,15,52
	.word	658
	.byte	16,51,0,10
	.byte	'_Ifx_SRC_GTM',0,14,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	30900
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2476
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	29361
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	29361
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	29795
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4295
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	30918
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	30927
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	30936
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	30945
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	29361
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4635
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	30954
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	30963
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	30954
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	30963
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	30974
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	30983
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	31003
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	31012
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	30900
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	31023
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	30900
	.byte	12,3,35,192,18,0,14
	.word	31032
	.byte	32
	.byte	'Ifx_SRC_GTM',0,14,243,1,3
	.word	31492
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,14,246,1,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	31518
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,14,249,1,3
	.word	31551
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,14,252,1,25,16,13
	.byte	'COK',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	29361
	.byte	4,2,35,12,0,14
	.word	31578
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,14,130,2,3
	.word	31651
	.byte	15,56
	.word	658
	.byte	16,55,0,10
	.byte	'_Ifx_SRC_I2C',0,14,133,2,25,80,13
	.byte	'BREQ',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	29361
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	29361
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	29361
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	31678
	.byte	56,2,35,24,0,14
	.word	31687
	.byte	32
	.byte	'Ifx_SRC_I2C',0,14,142,2,3
	.word	31810
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,14,145,2,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	31836
	.byte	32
	.byte	'Ifx_SRC_LMU',0,14,148,2,3
	.word	31868
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,14,151,2,25,20,13
	.byte	'SR0',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	29361
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	29361
	.byte	4,2,35,16,0,14
	.word	31894
	.byte	32
	.byte	'Ifx_SRC_MSC',0,14,158,2,3
	.word	31979
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,14,161,2,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	32005
	.byte	32
	.byte	'Ifx_SRC_PMU',0,14,164,2,3
	.word	32037
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,14,167,2,25,32,13
	.byte	'SR',0
	.word	30909
	.byte	32,2,35,0,0,14
	.word	32063
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,14,170,2,3
	.word	32096
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,14,173,2,25,32,13
	.byte	'SR',0
	.word	30909
	.byte	32,2,35,0,0,14
	.word	32123
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,14,176,2,3
	.word	32157
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,14,179,2,25,24,13
	.byte	'TX',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	29361
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	29361
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	29361
	.byte	4,2,35,20,0,14
	.word	32185
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,14,187,2,3
	.word	32278
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,14,190,2,25,4,13
	.byte	'SR',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	32305
	.byte	32
	.byte	'Ifx_SRC_SCR',0,14,193,2,3
	.word	32337
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,14,196,2,25,20,13
	.byte	'DTS',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	30994
	.byte	16,2,35,4,0,14
	.word	32363
	.byte	32
	.byte	'Ifx_SRC_SCU',0,14,200,2,3
	.word	32409
	.byte	15,24
	.word	29361
	.byte	16,5,0,10
	.byte	'_Ifx_SRC_SENT',0,14,203,2,25,24,13
	.byte	'SR',0
	.word	32435
	.byte	24,2,35,0,0,14
	.word	32444
	.byte	32
	.byte	'Ifx_SRC_SENT',0,14,206,2,3
	.word	32477
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,14,209,2,25,12,13
	.byte	'SR',0
	.word	30900
	.byte	12,2,35,0,0,14
	.word	32504
	.byte	32
	.byte	'Ifx_SRC_SMU',0,14,212,2,3
	.word	32536
	.byte	10
	.byte	'_Ifx_SRC_STM',0,14,215,2,25,8,13
	.byte	'SR0',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	29361
	.byte	4,2,35,4,0,14
	.word	32562
	.byte	32
	.byte	'Ifx_SRC_STM',0,14,219,2,3
	.word	32608
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,14,222,2,25,16,13
	.byte	'SR0',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	29361
	.byte	4,2,35,12,0,14
	.word	32634
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,14,228,2,3
	.word	32709
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,14,231,2,25,16,13
	.byte	'SR0',0
	.word	29361
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	29361
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	29361
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	29361
	.byte	4,2,35,12,0,14
	.word	32738
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,14,237,2,3
	.word	32812
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,14,240,2,25,4,13
	.byte	'SRC',0
	.word	29361
	.byte	4,2,35,0,0,14
	.word	32840
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,14,243,2,3
	.word	32874
	.byte	15,4
	.word	29421
	.byte	16,0,0,14
	.word	32901
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,14,128,3,25,4,13
	.byte	'AGBT',0
	.word	32910
	.byte	4,2,35,0,0,14
	.word	32915
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,14,131,3,3
	.word	32951
	.byte	15,48
	.word	29479
	.byte	16,3,0,14
	.word	32979
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,14,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	32988
	.byte	48,2,35,0,0,14
	.word	32993
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,14,137,3,3
	.word	33033
	.byte	14
	.word	29566
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,14,140,3,25,4,13
	.byte	'SPB',0
	.word	33063
	.byte	4,2,35,0,0,14
	.word	33068
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,14,143,3,3
	.word	33102
	.byte	15,64
	.word	29640
	.byte	16,0,0,14
	.word	33129
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,14,146,3,25,64,13
	.byte	'CAN',0
	.word	33138
	.byte	64,2,35,0,0,14
	.word	33143
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,14,149,3,3
	.word	33177
	.byte	15,32
	.word	29697
	.byte	16,1,0,14
	.word	33204
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,14,152,3,25,32,13
	.byte	'CCU6',0
	.word	33213
	.byte	32,2,35,0,0,14
	.word	33218
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,14,155,3,3
	.word	33254
	.byte	14
	.word	29804
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,14,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	33282
	.byte	8,2,35,0,0,14
	.word	33287
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,14,161,3,3
	.word	33331
	.byte	15,16
	.word	29870
	.byte	16,0,0,14
	.word	33363
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,14,164,3,25,16,13
	.byte	'CIF',0
	.word	33372
	.byte	16,2,35,0,0,14
	.word	33377
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,14,167,3,3
	.word	33411
	.byte	15,8
	.word	29969
	.byte	16,1,0,14
	.word	33438
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,14,170,3,25,8,13
	.byte	'CPU',0
	.word	33447
	.byte	8,2,35,0,0,14
	.word	33452
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,14,173,3,3
	.word	33486
	.byte	15,208,1
	.word	30040
	.byte	16,0,0,14
	.word	33513
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,14,176,3,25,208,1,13
	.byte	'DMA',0
	.word	33523
	.byte	208,1,2,35,0,0,14
	.word	33528
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,14,179,3,3
	.word	33564
	.byte	14
	.word	30133
	.byte	14
	.word	30133
	.byte	14
	.word	30133
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,14,182,3,25,32,13
	.byte	'DSADC0',0
	.word	33591
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4295
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	33596
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	33601
	.byte	8,2,35,24,0,14
	.word	33606
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,14,188,3,3
	.word	33697
	.byte	15,4
	.word	30209
	.byte	16,0,0,14
	.word	33726
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,14,191,3,25,4,13
	.byte	'EMEM',0
	.word	33735
	.byte	4,2,35,0,0,14
	.word	33740
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,14,194,3,3
	.word	33776
	.byte	15,80
	.word	30278
	.byte	16,0,0,14
	.word	33804
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,14,197,3,25,80,13
	.byte	'ERAY',0
	.word	33813
	.byte	80,2,35,0,0,14
	.word	33818
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,14,200,3,3
	.word	33854
	.byte	15,4
	.word	30432
	.byte	16,0,0,14
	.word	33882
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,14,203,3,25,4,13
	.byte	'ETH',0
	.word	33891
	.byte	4,2,35,0,0,14
	.word	33896
	.byte	32
	.byte	'Ifx_SRC_GETH',0,14,206,3,3
	.word	33930
	.byte	15,4
	.word	30490
	.byte	16,0,0,14
	.word	33957
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,14,209,3,25,4,13
	.byte	'FCE',0
	.word	33966
	.byte	4,2,35,0,0,14
	.word	33971
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,14,212,3,3
	.word	34005
	.byte	15,12
	.word	30548
	.byte	16,0,0,14
	.word	34032
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,14,215,3,25,12,13
	.byte	'FFT',0
	.word	34041
	.byte	12,2,35,0,0,14
	.word	34046
	.byte	32
	.byte	'Ifx_SRC_GFFT',0,14,218,3,3
	.word	34080
	.byte	15,64
	.word	30634
	.byte	16,1,0,14
	.word	34107
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,14,221,3,25,64,13
	.byte	'GPSR',0
	.word	34116
	.byte	64,2,35,0,0,14
	.word	34121
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,14,224,3,3
	.word	34157
	.byte	15,48
	.word	30755
	.byte	16,0,0,14
	.word	34185
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,14,227,3,25,48,13
	.byte	'GPT12',0
	.word	34194
	.byte	48,2,35,0,0,14
	.word	34199
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,14,230,3,3
	.word	34237
	.byte	15,204,18
	.word	31032
	.byte	16,0,0,14
	.word	34266
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,14,233,3,25,204,18,13
	.byte	'GTM',0
	.word	34276
	.byte	204,18,2,35,0,0,14
	.word	34281
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,14,236,3,3
	.word	34317
	.byte	15,4
	.word	31518
	.byte	16,0,0,14
	.word	34344
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,14,239,3,25,4,13
	.byte	'HSCT',0
	.word	34353
	.byte	4,2,35,0,0,14
	.word	34358
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,14,242,3,3
	.word	34394
	.byte	15,64
	.word	31578
	.byte	16,3,0,14
	.word	34422
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,14,245,3,25,68,13
	.byte	'HSSL',0
	.word	34431
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	29361
	.byte	4,2,35,64,0,14
	.word	34436
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,14,249,3,3
	.word	34485
	.byte	15,80
	.word	31687
	.byte	16,0,0,14
	.word	34513
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,14,252,3,25,80,13
	.byte	'I2C',0
	.word	34522
	.byte	80,2,35,0,0,14
	.word	34527
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,14,255,3,3
	.word	34561
	.byte	15,4
	.word	31836
	.byte	16,0,0,14
	.word	34588
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,14,130,4,25,4,13
	.byte	'LMU',0
	.word	34597
	.byte	4,2,35,0,0,14
	.word	34602
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,14,133,4,3
	.word	34636
	.byte	15,40
	.word	31894
	.byte	16,1,0,14
	.word	34663
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,14,136,4,25,40,13
	.byte	'MSC',0
	.word	34672
	.byte	40,2,35,0,0,14
	.word	34677
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,14,139,4,3
	.word	34711
	.byte	15,8
	.word	32005
	.byte	16,1,0,14
	.word	34738
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,14,142,4,25,8,13
	.byte	'PMU',0
	.word	34747
	.byte	8,2,35,0,0,14
	.word	34752
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,14,145,4,3
	.word	34786
	.byte	15,32
	.word	32063
	.byte	16,0,0,14
	.word	34813
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,14,148,4,25,32,13
	.byte	'PSI5',0
	.word	34822
	.byte	32,2,35,0,0,14
	.word	34827
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,14,151,4,3
	.word	34863
	.byte	15,32
	.word	32123
	.byte	16,0,0,14
	.word	34891
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,14,154,4,25,32,13
	.byte	'PSI5S',0
	.word	34900
	.byte	32,2,35,0,0,14
	.word	34905
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,14,157,4,3
	.word	34943
	.byte	15,96
	.word	32185
	.byte	16,3,0,14
	.word	34972
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,14,160,4,25,96,13
	.byte	'QSPI',0
	.word	34981
	.byte	96,2,35,0,0,14
	.word	34986
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,14,163,4,3
	.word	35022
	.byte	15,4
	.word	32305
	.byte	16,0,0,14
	.word	35050
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,14,166,4,25,4,13
	.byte	'SCR',0
	.word	35059
	.byte	4,2,35,0,0,14
	.word	35064
	.byte	32
	.byte	'Ifx_SRC_GSCR',0,14,169,4,3
	.word	35098
	.byte	14
	.word	32363
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,14,172,4,25,20,13
	.byte	'SCU',0
	.word	35125
	.byte	20,2,35,0,0,14
	.word	35130
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,14,175,4,3
	.word	35164
	.byte	15,24
	.word	32444
	.byte	16,0,0,14
	.word	35191
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,14,178,4,25,24,13
	.byte	'SENT',0
	.word	35200
	.byte	24,2,35,0,0,14
	.word	35205
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,14,181,4,3
	.word	35241
	.byte	15,12
	.word	32504
	.byte	16,0,0,14
	.word	35269
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,14,184,4,25,12,13
	.byte	'SMU',0
	.word	35278
	.byte	12,2,35,0,0,14
	.word	35283
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,14,187,4,3
	.word	35317
	.byte	15,16
	.word	32562
	.byte	16,1,0,14
	.word	35344
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,14,190,4,25,16,13
	.byte	'STM',0
	.word	35353
	.byte	16,2,35,0,0,14
	.word	35358
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,14,193,4,3
	.word	35392
	.byte	15,64
	.word	32738
	.byte	16,3,0,14
	.word	35419
	.byte	15,224,1
	.word	658
	.byte	16,223,1,0,15,32
	.word	32634
	.byte	16,1,0,14
	.word	35444
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,14,196,4,25,192,2,13
	.byte	'G',0
	.word	35428
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	35433
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	35453
	.byte	32,3,35,160,2,0,14
	.word	35458
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,14,201,4,3
	.word	35527
	.byte	14
	.word	32840
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,14,204,4,25,4,13
	.byte	'XBAR',0
	.word	35555
	.byte	4,2,35,0,0,14
	.word	35560
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,14,207,4,3
	.word	35596
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	35624
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	36181
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	483
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	36258
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	658
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	658
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	658
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	658
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	658
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	658
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	658
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	658
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	36394
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	658
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	658
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	658
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	658
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	658
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	658
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	658
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	36674
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	36912
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	658
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	658
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	37040
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	658
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	658
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	37283
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	37518
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	483
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	37646
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	483
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	37746
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	658
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	658
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	658
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	37846
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	483
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	38054
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	675
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	658
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	675
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	658
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	38219
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	675
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	658
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	38402
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	658
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	658
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	483
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	658
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	658
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	38556
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	38920
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	675
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	658
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	658
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	658
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	39131
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	675
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	483
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	39383
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	39501
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	39612
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	39775
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	39938
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	40096
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	658
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	658
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	658
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	658
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	658
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	658
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	658
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	658
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	675
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	40261
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	675
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	658
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	658
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	675
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	658
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	40590
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	40811
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	40974
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	41246
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	41399
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	41555
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	41717
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	41860
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	42025
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	675
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	658
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	42170
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	658
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	42351
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	42525
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	483
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	42685
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	483
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	42829
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	43103
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	43242
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	658
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	675
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	658
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	658
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	43405
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	675
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	658
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	675
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	658
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	43623
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	43786
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	44122
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	658
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	44229
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	44681
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	658
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	658
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	44780
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	675
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	44930
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	483
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	658
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	45079
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	483
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	45240
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	675
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	675
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	45370
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	45502
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	658
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	675
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	45617
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	675
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	675
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	45728
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	658
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	658
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	658
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	658
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	658
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	45886
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	46298
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	675
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	658
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	46399
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	483
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	46666
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	46802
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	658
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	46913
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	47046
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	675
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	658
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	658
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	47249
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	658
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	658
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	658
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	675
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	47605
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	675
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	47783
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	675
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	658
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	658
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	658
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	47883
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	658
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	658
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	658
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	658
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	675
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	48253
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	483
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	48439
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	48637
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	658
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	658
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	483
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	48870
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	658
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	658
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	658
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	658
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	658
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	49022
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	658
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	658
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	658
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	658
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	49589
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	658
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	658
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	658
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	49883
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	658
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	658
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	675
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	658
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	50161
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	675
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	50657
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	675
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	50970
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	658
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	658
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	658
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	658
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	658
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	51179
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	658
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	658
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	658
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	51390
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	483
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	51822
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	658
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	658
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	658
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	51918
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	52178
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	658
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	483
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	52303
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	52500
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	52653
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	52806
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	52959
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	522
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	697
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	941
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	506
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	506
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	506
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	506
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	53214
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	658
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	53340
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	658
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	53592
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35624
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	53811
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36181
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	53875
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36258
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	53939
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36394
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	54004
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	54069
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36912
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	54134
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37040
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	54199
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37283
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	54264
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37518
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	54329
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37646
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	54394
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37746
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	54459
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37846
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	54524
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38054
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	54588
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38219
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	54652
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38402
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	54716
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38556
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	54781
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38920
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	54843
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39131
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	54905
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39383
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	54967
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39501
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	55031
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39612
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	55096
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39775
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	55162
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39938
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	55228
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40096
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	55296
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40261
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	55363
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40590
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	55431
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40811
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	55499
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40974
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	55565
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41246
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	55632
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41399
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	55701
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41555
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	55770
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41717
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	55839
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41860
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	55908
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42025
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	55977
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42170
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	56046
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42351
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	56114
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42525
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	56182
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42685
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	56250
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42829
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	56318
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43103
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	56383
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43242
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	56448
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43405
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	56514
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43623
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	56578
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43786
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	56639
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	56700
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44229
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	56760
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44681
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	56822
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44780
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	56882
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	56944
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	57012
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45240
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	57080
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45370
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	57148
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45502
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	57212
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45617
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	57277
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45728
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	57340
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45886
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	57401
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46298
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	57465
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46399
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	57526
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46666
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	57590
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46802
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	57657
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46913
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	57720
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47046
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	57781
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47249
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	57843
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47605
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	57908
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47783
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	57973
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47883
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	58038
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48253
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	58107
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48439
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	58176
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48637
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	58245
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48870
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	58310
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49022
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	58373
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49589
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	58438
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49883
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	58503
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50161
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	58568
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50657
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	58634
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51179
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	58703
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50970
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	58767
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51390
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	58832
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51822
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	58897
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51918
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	58962
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52178
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	59026
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52303
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	59092
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52500
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	59156
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52653
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	59221
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52806
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	59286
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52959
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	59351
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	618
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	901
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1132
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53214
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	59502
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53340
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	59569
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53592
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	59636
	.byte	14
	.word	1172
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	59701
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	59502
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	59569
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	59636
	.byte	4,2,35,8,0,14
	.word	59730
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	59791
	.byte	15,8
	.word	54967
	.byte	16,1,0,15,20
	.word	658
	.byte	16,19,0,15,8
	.word	58310
	.byte	16,1,0,14
	.word	59730
	.byte	15,24
	.word	1172
	.byte	16,1,0,14
	.word	59850
	.byte	15,16
	.word	54781
	.byte	16,3,0,15,16
	.word	56760
	.byte	16,3,0,15,180,3
	.word	658
	.byte	16,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4295
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	56700
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2476
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	57401
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	58245
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	57843
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	57908
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	57973
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	58176
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	58038
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	58107
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	54004
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	54069
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	56578
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	56514
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	54134
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	54199
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	54264
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	54329
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	58832
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2476
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	58703
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	53939
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	59026
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	58767
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2476
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	55565
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	59818
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	55031
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	59092
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	54394
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	54459
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	59827
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	57720
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	56882
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	57465
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	57340
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	56822
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	56318
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	55296
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	55096
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	55162
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	58962
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2476
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	58373
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	58568
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	58634
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	59836
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2476
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	54716
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	54588
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	58438
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	58503
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	59845
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	54905
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	59859
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	4635
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	59351
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	59286
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	59156
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	59221
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2476
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	57148
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	57212
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	54524
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	57277
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4295
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	58897
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	27138
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	56944
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	57012
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	57080
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	27118
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	57657
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4295
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	56383
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	55228
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	56448
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	55499
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	55363
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2476
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	56046
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	56114
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	56182
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	56250
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	55632
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	55701
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	55770
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	55839
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	55908
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	55977
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	55431
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2476
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	57590
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	57526
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	30269
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	59864
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	54843
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	56639
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	57781
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	59873
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2476
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	54652
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	59882
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	53875
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	53811
	.byte	4,3,35,252,7,0,14
	.word	59893
	.byte	32
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	61883
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,15,45,16,4,11
	.byte	'EN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,15,79,3
	.word	61905
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,15,82,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,15,85,3
	.word	62462
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,15,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,15,91,3
	.word	62539
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,15,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,15,97,3
	.word	62611
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,15,100,16,4,11
	.byte	'DISR',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,15,107,3
	.word	62687
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,15,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	658
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	658
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	658
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	658
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	658
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	658
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	658
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	658
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,15,120,3
	.word	62828
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,15,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,15,126,3
	.word	63046
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,15,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	483
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,15,139,1,3
	.word	63113
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,15,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,15,147,1,3
	.word	63316
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,15,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,15,157,1,3
	.word	63423
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,15,160,1,16,4,11
	.byte	'RST',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	483
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,15,165,1,3
	.word	63574
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,15,168,1,16,4,11
	.byte	'RST',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	483
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,15,172,1,3
	.word	63685
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,15,175,1,16,4,11
	.byte	'CLR',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	483
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,15,179,1,3
	.word	63777
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,15,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	658
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	658
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,15,189,1,3
	.word	63873
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,15,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,15,195,1,3
	.word	64019
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,15,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,15,201,1,3
	.word	64091
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,15,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,15,207,1,3
	.word	64167
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,15,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,15,213,1,3
	.word	64239
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,15,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,15,219,1,3
	.word	64311
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,15,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,15,225,1,3
	.word	64384
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,15,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,15,231,1,3
	.word	64457
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,15,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,15,237,1,3
	.word	64530
	.byte	12,15,245,1,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61905
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,15,250,1,3
	.word	64603
	.byte	12,15,253,1,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62462
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,15,130,2,3
	.word	64667
	.byte	12,15,133,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62539
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,15,138,2,3
	.word	64731
	.byte	12,15,141,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62611
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,15,146,2,3
	.word	64792
	.byte	12,15,149,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62687
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,15,154,2,3
	.word	64855
	.byte	12,15,157,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62828
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,15,162,2,3
	.word	64916
	.byte	12,15,165,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63046
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,15,170,2,3
	.word	64979
	.byte	12,15,173,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63113
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,15,178,2,3
	.word	65040
	.byte	12,15,181,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63316
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,15,186,2,3
	.word	65101
	.byte	12,15,189,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63423
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,15,194,2,3
	.word	65161
	.byte	12,15,197,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63574
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,15,202,2,3
	.word	65223
	.byte	12,15,205,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63685
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,15,210,2,3
	.word	65286
	.byte	12,15,213,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63777
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,15,218,2,3
	.word	65349
	.byte	12,15,221,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,15,226,2,3
	.word	65414
	.byte	12,15,229,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64019
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,15,234,2,3
	.word	65475
	.byte	12,15,237,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64091
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,15,242,2,3
	.word	65537
	.byte	12,15,245,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64167
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,15,250,2,3
	.word	65601
	.byte	12,15,253,2,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64239
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,15,130,3,3
	.word	65663
	.byte	12,15,133,3,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64311
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,15,138,3,3
	.word	65725
	.byte	12,15,141,3,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64384
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,15,146,3,3
	.word	65787
	.byte	12,15,149,3,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64457
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,15,154,3,3
	.word	65849
	.byte	12,15,157,3,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64530
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,15,162,3,3
	.word	65911
	.byte	17,16,236,10,9,1,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,18
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,16,240,10,3
	.word	65973
	.byte	17,16,250,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,16,255,10,3
	.word	66070
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,17,45,16,4,11
	.byte	'EN0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,17,79,3
	.word	66192
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,17,82,16,4,11
	.byte	'reserved_0',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,17,85,3
	.word	66753
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,17,88,16,4,11
	.byte	'SEL',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	483
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,17,95,3
	.word	66834
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,17,98,16,4,11
	.byte	'VLD0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	483
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,17,111,3
	.word	66987
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,17,114,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	483
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	658
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,17,121,3
	.word	67235
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,17,124,16,4,11
	.byte	'STATUS',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	483
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,17,128,1,3
	.word	67381
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,17,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,17,136,1,3
	.word	67479
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,17,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,17,144,1,3
	.word	67595
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,17,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	483
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	675
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,17,153,1,3
	.word	67711
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,17,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	483
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	675
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,17,162,1,3
	.word	67851
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,17,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	483
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	675
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,17,171,1,3
	.word	67991
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,17,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	658
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	658
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	675
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	658
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	658
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	658
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,17,193,1,3
	.word	68130
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,17,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	658
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	658
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	658
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,17,218,1,3
	.word	68492
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,17,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	675
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	658
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	658
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	658
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,17,254,1,3
	.word	68933
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,17,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	658
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	658
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,17,134,2,3
	.word	69539
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,17,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	675
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,17,147,2,3
	.word	69650
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,17,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	675
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,17,159,2,3
	.word	69864
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,17,162,2,16,4,11
	.byte	'L',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	658
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	658
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	675
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	658
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,17,179,2,3
	.word	70051
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,17,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	658
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	483
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,17,188,2,3
	.word	70375
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,17,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	675
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,17,199,2,3
	.word	70518
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,17,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	675
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	658
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	658
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	658
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	675
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,17,219,2,3
	.word	70707
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,17,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	658
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	658
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,17,254,2,3
	.word	71070
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,17,129,3,16,4,11
	.byte	'S0L',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	658
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,17,160,3,3
	.word	71665
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,17,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	658
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	658
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	658
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	658
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	658
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	658
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	658
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	658
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	658
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	658
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	658
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	658
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	658
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	658
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	658
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	658
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	658
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	658
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	658
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	658
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	658
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,17,194,3,3
	.word	72189
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,17,197,3,16,4,11
	.byte	'TAG',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	483
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,17,201,3,3
	.word	72771
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,17,204,3,16,4,11
	.byte	'TAG',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	483
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,17,208,3,3
	.word	72873
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,17,211,3,16,4,11
	.byte	'TAG',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	483
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,17,215,3,3
	.word	72975
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,17,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	483
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,17,222,3,3
	.word	73077
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,17,225,3,16,4,11
	.byte	'STRT',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	658
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	658
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	658
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	658
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	658
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	658
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	675
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,17,236,3,3
	.word	73171
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,17,239,3,16,4,11
	.byte	'DATA',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,17,242,3,3
	.word	73381
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,17,245,3,16,4,11
	.byte	'DATA',0,4
	.word	483
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,17,248,3,3
	.word	73454
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,17,251,3,16,4,11
	.byte	'SEL',0,1
	.word	658
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	658
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	658
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	658
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	483
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,17,130,4,3
	.word	73527
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,17,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	658
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	483
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,17,137,4,3
	.word	73682
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,17,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	658
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	483
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	658
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	658
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	658
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,17,147,4,3
	.word	73787
	.byte	12,17,155,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66192
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,17,160,4,3
	.word	73935
	.byte	12,17,163,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66753
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,17,168,4,3
	.word	74001
	.byte	12,17,171,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66834
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,17,176,4,3
	.word	74067
	.byte	12,17,179,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66987
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,17,184,4,3
	.word	74135
	.byte	12,17,187,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67235
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,17,192,4,3
	.word	74204
	.byte	12,17,195,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67381
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,17,200,4,3
	.word	74272
	.byte	12,17,203,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67479
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,17,208,4,3
	.word	74337
	.byte	12,17,211,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67595
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,17,216,4,3
	.word	74402
	.byte	12,17,219,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67711
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,17,224,4,3
	.word	74467
	.byte	12,17,227,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67851
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,17,232,4,3
	.word	74532
	.byte	12,17,235,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67991
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,17,240,4,3
	.word	74597
	.byte	12,17,243,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68130
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,17,248,4,3
	.word	74661
	.byte	12,17,251,4,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68492
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,17,128,5,3
	.word	74725
	.byte	12,17,131,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68933
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,17,136,5,3
	.word	74789
	.byte	12,17,139,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69539
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,17,144,5,3
	.word	74852
	.byte	12,17,147,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69650
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,17,152,5,3
	.word	74914
	.byte	12,17,155,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69864
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,17,160,5,3
	.word	74978
	.byte	12,17,163,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70051
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,17,168,5,3
	.word	75042
	.byte	12,17,171,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70375
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,17,176,5,3
	.word	75109
	.byte	12,17,179,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70518
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,17,184,5,3
	.word	75178
	.byte	12,17,187,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70707
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,17,192,5,3
	.word	75247
	.byte	12,17,195,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71070
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,17,200,5,3
	.word	75320
	.byte	12,17,203,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71665
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,17,208,5,3
	.word	75389
	.byte	12,17,211,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,17,216,5,3
	.word	75456
	.byte	12,17,219,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72771
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,17,224,5,3
	.word	75525
	.byte	12,17,227,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,17,232,5,3
	.word	75593
	.byte	12,17,235,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72975
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,17,240,5,3
	.word	75661
	.byte	12,17,243,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73077
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,17,248,5,3
	.word	75729
	.byte	12,17,251,5,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73171
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,17,128,6,3
	.word	75793
	.byte	12,17,131,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73381
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,17,136,6,3
	.word	75857
	.byte	12,17,139,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73454
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,17,144,6,3
	.word	75921
	.byte	12,17,147,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73527
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,17,152,6,3
	.word	75985
	.byte	12,17,155,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73682
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,17,160,6,3
	.word	76053
	.byte	12,17,163,6,9,4,13
	.byte	'U',0
	.word	483
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	499
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73787
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,17,168,6,3
	.word	76122
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,17,179,6,25,12,13
	.byte	'CFG',0
	.word	74067
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	74135
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	74204
	.byte	4,2,35,8,0,14
	.word	76190
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,17,184,6,3
	.word	76253
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,17,187,6,25,12,13
	.byte	'CFG0',0
	.word	75525
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	75593
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	75661
	.byte	4,2,35,8,0,14
	.word	76282
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,17,192,6,3
	.word	76346
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,17,195,6,25,12,13
	.byte	'CFG',0
	.word	75985
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	76053
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	76122
	.byte	4,2,35,8,0,14
	.word	76374
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,17,200,6,3
	.word	76437
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	8048
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7961
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	4304
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	2357
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	3352
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	2485
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	3132
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2700
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2915
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	7320
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	7444
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	7528
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7708
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5959
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	6483
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	6133
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	6307
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	6972
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1786
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	5296
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5784
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	5443
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5612
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6639
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	1470
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	5010
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4644
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3675
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	3979
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8575
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	8008
	.byte	32
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4595
	.byte	32
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	2436
	.byte	32
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3626
	.byte	32
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2660
	.byte	32
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	3312
	.byte	32
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2875
	.byte	32
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	3092
	.byte	32
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	7404
	.byte	32
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7653
	.byte	32
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7912
	.byte	32
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	7280
	.byte	32
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	6093
	.byte	32
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6599
	.byte	32
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	6267
	.byte	32
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	6443
	.byte	32
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	2317
	.byte	32
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6932
	.byte	32
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	5403
	.byte	32
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5919
	.byte	32
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5572
	.byte	32
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5744
	.byte	32
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1746
	.byte	32
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	5256
	.byte	32
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	4970
	.byte	32
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3939
	.byte	32
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	4255
	.byte	14
	.word	8615
	.byte	32
	.byte	'Ifx_P',0,6,139,6,3
	.word	77784
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,32
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	77804
	.byte	17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	77955
	.byte	17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,32
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	78199
	.byte	17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,32
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	78297
	.byte	32
	.byte	'IfxPort_State',0,5,178,1,3
	.word	9228
	.byte	20,5,190,1,9,8,13
	.byte	'port',0
	.word	9223
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	658
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	78762
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,18,148,1,16
	.word	196
	.byte	20,18,212,5,9,8,13
	.byte	'value',0
	.word	9646
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9646
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,18,216,5,3
	.word	78862
	.byte	20,18,221,5,9,8,13
	.byte	'pDivider',0
	.word	658
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	658
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	658
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	253
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,18,227,5,3
	.word	78933
	.byte	20,18,231,5,9,12,13
	.byte	'k2Step',0
	.word	658
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	253
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	78822
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,18,236,5,3
	.word	79050
	.byte	3
	.word	193
	.byte	20,18,244,5,9,48,13
	.byte	'ccucon0',0
	.word	78862
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	78862
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	78862
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	78862
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	78862
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	78862
	.byte	8,2,35,40,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,18,252,5,3
	.word	79152
	.byte	20,18,128,6,9,8,13
	.byte	'value',0
	.word	9646
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9646
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,18,132,6,3
	.word	79304
	.byte	3
	.word	79050
	.byte	20,18,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	658
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	79380
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	78933
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,18,142,6,3
	.word	79385
	.byte	17,7,144,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,7,148,1,3
	.word	79502
	.byte	20,7,160,1,9,6,13
	.byte	'counter',0
	.word	9646
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	658
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,7,164,1,3
	.word	79591
	.byte	20,7,172,1,9,32,13
	.byte	'instruction',0
	.word	79591
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	79591
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	79591
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	79591
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	79591
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,7,179,1,3
	.word	79657
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L28:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,38,0,73,19
	.byte	0,0,22,46,1,3,8,54,15,39,12,63,12,60,12,0,0,23,5,0,73,19,0,0,24,46,1,3,8,73,19,54,15,39,12,63,12,60,12
	.byte	0,0,25,5,0,3,8,73,19,0,0,26,46,0,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,49,19,0,0,28,5,0,49,19,0,0,29
	.byte	29,1,49,19,0,0,30,11,0,49,19,0,0,31,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,32,22,0,3,8,58,15
	.byte	59,15,57,15,73,19,0,0,33,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L29:
	.word	.L260-.L259
.L259:
	.half	3
	.word	.L262-.L261
.L261:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0,0
.L262:
.L260:
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.debug_info'
.L30:
	.word	457
	.half	3
	.word	.L31
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L33,.L32
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_memoryManagementError',0,1,129,1,6,1,1,1
	.word	.L3,.L90,.L2
	.byte	4
	.byte	'tin',0,1,129,1,47
	.word	.L91,.L92
	.byte	5
	.word	.L3,.L90
	.byte	6
	.byte	'trapWatch',0,1,131,1,26
	.word	.L93,.L94
	.byte	7
	.word	.L95,.L96,.L97
	.byte	8
	.word	.L98,.L99
	.byte	8
	.word	.L100,.L101
	.byte	9
	.word	.L102,.L96,.L97
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L104
	.byte	7
	.word	.L105,.L96,.L106
	.byte	9
	.word	.L107,.L96,.L106
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L109
	.byte	0,0,7
	.word	.L110,.L111,.L112
	.byte	10
	.word	.L113,.L114
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L116
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.debug_abbrev'
.L31:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.debug_line'
.L32:
	.word	.L264-.L263
.L263:
	.half	3
	.word	.L266-.L265
.L265:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L266:
	.byte	5,6,7,0,5,2
	.word	.L3
	.byte	3,128,1,1,4,2,5,5,9
	.half	.L96-.L3
	.byte	3,222,1,1,4,1,5,45,9
	.half	.L267-.L96
	.byte	3,154,126,1,5,21,9
	.half	.L106-.L267
	.byte	3,1,1,9
	.half	.L268-.L106
	.byte	3,1,1,4,3,5,19,9
	.half	.L111-.L268
	.byte	3,141,5,1,5,28,9
	.half	.L232-.L111
	.byte	3,1,1,4,1,5,15,9
	.half	.L112-.L232
	.byte	3,251,122,1,5,5,9
	.half	.L97-.L112
	.byte	3,1,1,9
	.half	.L234-.L97
	.byte	3,1,1,9
	.half	.L269-.L234
	.byte	3,1,1,9
	.half	.L270-.L269
	.byte	3,1,1,5,1,9
	.half	.L271-.L270
	.byte	3,1,1,7,9
	.half	.L34-.L271
	.byte	0,1,1
.L264:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.debug_ranges'
.L33:
	.word	-1,.L3,0,.L34-.L3,0,0
.L114:
	.word	-1,.L3,.L111-.L3,.L112-.L3,-1,.L5,0,.L89-.L5,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.debug_info'
.L35:
	.word	463
	.half	3
	.word	.L36
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L38,.L37
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_internalProtectionError',0,1,140,1,6,1,1,1
	.word	.L7,.L117,.L6
	.byte	4
	.byte	'tin',0,1,140,1,49
	.word	.L91,.L118
	.byte	5
	.word	.L7,.L117
	.byte	6
	.byte	'trapWatch',0,1,142,1,26
	.word	.L119,.L120
	.byte	7
	.word	.L95,.L121,.L122
	.byte	8
	.word	.L98,.L123
	.byte	8
	.word	.L100,.L124
	.byte	9
	.word	.L102,.L121,.L122
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L125
	.byte	7
	.word	.L105,.L121,.L126
	.byte	9
	.word	.L107,.L121,.L126
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L127
	.byte	0,0,7
	.word	.L110,.L128,.L129
	.byte	9
	.word	.L113,.L128,.L129
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L130
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.debug_abbrev'
.L36:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.debug_line'
.L37:
	.word	.L273-.L272
.L272:
	.half	3
	.word	.L275-.L274
.L274:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L275:
	.byte	5,6,7,0,5,2
	.word	.L7
	.byte	3,139,1,1,4,2,5,5,9
	.half	.L121-.L7
	.byte	3,211,1,1,4,1,5,45,9
	.half	.L276-.L121
	.byte	3,154,126,1,5,21,9
	.half	.L126-.L276
	.byte	3,1,1,9
	.half	.L277-.L126
	.byte	3,1,1,4,3,5,19,9
	.half	.L128-.L277
	.byte	3,141,5,1,5,28,9
	.half	.L235-.L128
	.byte	3,1,1,4,1,5,15,9
	.half	.L129-.L235
	.byte	3,134,123,1,5,5,9
	.half	.L122-.L129
	.byte	3,1,1,9
	.half	.L237-.L122
	.byte	3,1,1,9
	.half	.L278-.L237
	.byte	3,1,1,9
	.half	.L279-.L278
	.byte	3,1,1,5,1,9
	.half	.L280-.L279
	.byte	3,1,1,7,9
	.half	.L39-.L280
	.byte	0,1,1
.L273:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.debug_ranges'
.L38:
	.word	-1,.L7,0,.L39-.L7,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_instructionError')
	.sect	'.debug_info'
.L40:
	.word	456
	.half	3
	.word	.L41
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L43,.L42
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_instructionError',0,1,151,1,6,1,1,1
	.word	.L9,.L131,.L8
	.byte	4
	.byte	'tin',0,1,151,1,42
	.word	.L91,.L132
	.byte	5
	.word	.L9,.L131
	.byte	6
	.byte	'trapWatch',0,1,153,1,26
	.word	.L133,.L134
	.byte	7
	.word	.L95,.L135,.L136
	.byte	8
	.word	.L98,.L137
	.byte	8
	.word	.L100,.L138
	.byte	9
	.word	.L102,.L135,.L136
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L139
	.byte	7
	.word	.L105,.L135,.L140
	.byte	9
	.word	.L107,.L135,.L140
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L141
	.byte	0,0,7
	.word	.L110,.L142,.L143
	.byte	9
	.word	.L113,.L142,.L143
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L144
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_instructionError')
	.sect	'.debug_abbrev'
.L41:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_instructionError')
	.sect	'.debug_line'
.L42:
	.word	.L282-.L281
.L281:
	.half	3
	.word	.L284-.L283
.L283:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L284:
	.byte	5,6,7,0,5,2
	.word	.L9
	.byte	3,150,1,1,4,2,5,5,9
	.half	.L135-.L9
	.byte	3,200,1,1,4,1,5,45,9
	.half	.L285-.L135
	.byte	3,154,126,1,5,21,9
	.half	.L140-.L285
	.byte	3,1,1,9
	.half	.L286-.L140
	.byte	3,1,1,4,3,5,19,9
	.half	.L142-.L286
	.byte	3,141,5,1,5,28,9
	.half	.L238-.L142
	.byte	3,1,1,4,1,5,15,9
	.half	.L143-.L238
	.byte	3,145,123,1,5,5,9
	.half	.L136-.L143
	.byte	3,1,1,9
	.half	.L240-.L136
	.byte	3,1,1,9
	.half	.L287-.L240
	.byte	3,1,1,9
	.half	.L288-.L287
	.byte	3,1,1,5,1,9
	.half	.L289-.L288
	.byte	3,1,1,7,9
	.half	.L44-.L289
	.byte	0,1,1
.L282:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_instructionError')
	.sect	'.debug_ranges'
.L43:
	.word	-1,.L9,0,.L44-.L9,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.debug_info'
.L45:
	.word	462
	.half	3
	.word	.L46
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L48,.L47
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_contextManagementError',0,1,162,1,6,1,1,1
	.word	.L11,.L145,.L10
	.byte	4
	.byte	'tin',0,1,162,1,48
	.word	.L91,.L146
	.byte	5
	.word	.L11,.L145
	.byte	6
	.byte	'trapWatch',0,1,164,1,26
	.word	.L147,.L148
	.byte	7
	.word	.L95,.L149,.L150
	.byte	8
	.word	.L98,.L151
	.byte	8
	.word	.L100,.L152
	.byte	9
	.word	.L102,.L149,.L150
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L153
	.byte	7
	.word	.L105,.L149,.L154
	.byte	9
	.word	.L107,.L149,.L154
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L155
	.byte	0,0,7
	.word	.L110,.L156,.L157
	.byte	9
	.word	.L113,.L156,.L157
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L158
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.debug_abbrev'
.L46:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.debug_line'
.L47:
	.word	.L291-.L290
.L290:
	.half	3
	.word	.L293-.L292
.L292:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L293:
	.byte	5,6,7,0,5,2
	.word	.L11
	.byte	3,161,1,1,4,2,5,5,9
	.half	.L149-.L11
	.byte	3,189,1,1,4,1,5,45,9
	.half	.L294-.L149
	.byte	3,154,126,1,5,21,9
	.half	.L154-.L294
	.byte	3,1,1,9
	.half	.L295-.L154
	.byte	3,1,1,4,3,5,19,9
	.half	.L156-.L295
	.byte	3,141,5,1,5,28,9
	.half	.L241-.L156
	.byte	3,1,1,4,1,5,15,9
	.half	.L157-.L241
	.byte	3,156,123,1,5,5,9
	.half	.L150-.L157
	.byte	3,1,1,9
	.half	.L243-.L150
	.byte	3,1,1,9
	.half	.L296-.L243
	.byte	3,1,1,9
	.half	.L297-.L296
	.byte	3,1,1,5,1,9
	.half	.L298-.L297
	.byte	3,1,1,7,9
	.half	.L49-.L298
	.byte	0,1,1
.L291:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.debug_ranges'
.L48:
	.word	-1,.L11,0,.L49-.L11,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_busError')
	.sect	'.debug_info'
.L50:
	.word	448
	.half	3
	.word	.L51
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L53,.L52
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_busError',0,1,173,1,6,1,1,1
	.word	.L13,.L159,.L12
	.byte	4
	.byte	'tin',0,1,173,1,34
	.word	.L91,.L160
	.byte	5
	.word	.L13,.L159
	.byte	6
	.byte	'trapWatch',0,1,175,1,26
	.word	.L161,.L162
	.byte	7
	.word	.L95,.L163,.L164
	.byte	8
	.word	.L98,.L165
	.byte	8
	.word	.L100,.L166
	.byte	9
	.word	.L102,.L163,.L164
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L167
	.byte	7
	.word	.L105,.L163,.L168
	.byte	9
	.word	.L107,.L163,.L168
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L169
	.byte	0,0,7
	.word	.L110,.L170,.L171
	.byte	9
	.word	.L113,.L170,.L171
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L172
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_busError')
	.sect	'.debug_abbrev'
.L51:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_busError')
	.sect	'.debug_line'
.L52:
	.word	.L300-.L299
.L299:
	.half	3
	.word	.L302-.L301
.L301:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L302:
	.byte	5,6,7,0,5,2
	.word	.L13
	.byte	3,172,1,1,4,2,5,5,9
	.half	.L163-.L13
	.byte	3,178,1,1,4,1,5,45,9
	.half	.L303-.L163
	.byte	3,154,126,1,5,21,9
	.half	.L168-.L303
	.byte	3,1,1,9
	.half	.L304-.L168
	.byte	3,1,1,4,3,5,19,9
	.half	.L170-.L304
	.byte	3,141,5,1,5,28,9
	.half	.L244-.L170
	.byte	3,1,1,4,1,5,15,9
	.half	.L171-.L244
	.byte	3,167,123,1,5,5,9
	.half	.L164-.L171
	.byte	3,1,1,9
	.half	.L246-.L164
	.byte	3,1,1,9
	.half	.L305-.L246
	.byte	3,1,1,9
	.half	.L306-.L305
	.byte	3,1,1,5,1,9
	.half	.L307-.L306
	.byte	3,1,1,7,9
	.half	.L54-.L307
	.byte	0,1,1
.L300:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_busError')
	.sect	'.debug_ranges'
.L53:
	.word	-1,.L13,0,.L54-.L13,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_assertion')
	.sect	'.debug_info'
.L55:
	.word	449
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L58,.L57
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_assertion',0,1,184,1,6,1,1,1
	.word	.L15,.L173,.L14
	.byte	4
	.byte	'tin',0,1,184,1,35
	.word	.L91,.L174
	.byte	5
	.word	.L15,.L173
	.byte	6
	.byte	'trapWatch',0,1,186,1,26
	.word	.L175,.L176
	.byte	7
	.word	.L95,.L177,.L178
	.byte	8
	.word	.L98,.L179
	.byte	8
	.word	.L100,.L180
	.byte	9
	.word	.L102,.L177,.L178
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L181
	.byte	7
	.word	.L105,.L177,.L182
	.byte	9
	.word	.L107,.L177,.L182
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L183
	.byte	0,0,7
	.word	.L110,.L184,.L185
	.byte	9
	.word	.L113,.L184,.L185
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L186
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_assertion')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_assertion')
	.sect	'.debug_line'
.L57:
	.word	.L309-.L308
.L308:
	.half	3
	.word	.L311-.L310
.L310:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L311:
	.byte	5,6,7,0,5,2
	.word	.L15
	.byte	3,183,1,1,4,2,5,5,9
	.half	.L177-.L15
	.byte	3,167,1,1,4,1,5,45,9
	.half	.L312-.L177
	.byte	3,154,126,1,5,21,9
	.half	.L182-.L312
	.byte	3,1,1,9
	.half	.L313-.L182
	.byte	3,1,1,4,3,5,19,9
	.half	.L184-.L313
	.byte	3,141,5,1,5,28,9
	.half	.L247-.L184
	.byte	3,1,1,4,1,5,15,9
	.half	.L185-.L247
	.byte	3,178,123,1,5,5,9
	.half	.L178-.L185
	.byte	3,1,1,9
	.half	.L249-.L178
	.byte	3,1,1,9
	.half	.L314-.L249
	.byte	3,1,1,9
	.half	.L315-.L314
	.byte	3,1,1,5,1,9
	.half	.L316-.L315
	.byte	3,1,1,7,9
	.half	.L59-.L316
	.byte	0,1,1
.L309:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_assertion')
	.sect	'.debug_ranges'
.L58:
	.word	-1,.L15,0,.L59-.L15,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.debug_info'
.L60:
	.word	455
	.half	3
	.word	.L61
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L63,.L62
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_systemCall_Cpu0',0,1,195,1,6,1,1,1
	.word	.L17,.L187,.L16
	.byte	4
	.byte	'tin',0,1,195,1,41
	.word	.L91,.L188
	.byte	5
	.word	.L17,.L187
	.byte	6
	.byte	'trapWatch',0,1,197,1,26
	.word	.L189,.L190
	.byte	7
	.word	.L95,.L191,.L192
	.byte	8
	.word	.L98,.L193
	.byte	8
	.word	.L100,.L194
	.byte	9
	.word	.L102,.L191,.L192
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L195
	.byte	7
	.word	.L105,.L191,.L196
	.byte	9
	.word	.L107,.L191,.L196
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L197
	.byte	0,0,7
	.word	.L110,.L198,.L199
	.byte	9
	.word	.L113,.L198,.L199
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L200
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.debug_abbrev'
.L61:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.debug_line'
.L62:
	.word	.L318-.L317
.L317:
	.half	3
	.word	.L320-.L319
.L319:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L320:
	.byte	5,6,7,0,5,2
	.word	.L17
	.byte	3,194,1,1,4,2,5,5,9
	.half	.L191-.L17
	.byte	3,156,1,1,4,1,5,45,9
	.half	.L321-.L191
	.byte	3,154,126,1,5,21,9
	.half	.L196-.L321
	.byte	3,1,1,9
	.half	.L322-.L196
	.byte	3,1,1,4,3,5,19,9
	.half	.L198-.L322
	.byte	3,141,5,1,5,28,9
	.half	.L250-.L198
	.byte	3,1,1,4,1,5,15,9
	.half	.L199-.L250
	.byte	3,189,123,1,5,5,9
	.half	.L192-.L199
	.byte	3,1,1,9
	.half	.L252-.L192
	.byte	3,1,1,9
	.half	.L323-.L252
	.byte	3,1,1,5,1,9
	.half	.L324-.L323
	.byte	3,1,1,7,9
	.half	.L64-.L324
	.byte	0,1,1
.L318:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.debug_ranges'
.L63:
	.word	-1,.L17,0,.L64-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.debug_info'
.L65:
	.word	455
	.half	3
	.word	.L66
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L68,.L67
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_systemCall_Cpu1',0,1,205,1,6,1,1,1
	.word	.L19,.L201,.L18
	.byte	4
	.byte	'tin',0,1,205,1,41
	.word	.L91,.L202
	.byte	5
	.word	.L19,.L201
	.byte	6
	.byte	'trapWatch',0,1,207,1,26
	.word	.L203,.L204
	.byte	7
	.word	.L95,.L205,.L206
	.byte	8
	.word	.L98,.L207
	.byte	8
	.word	.L100,.L208
	.byte	9
	.word	.L102,.L205,.L206
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L209
	.byte	7
	.word	.L105,.L205,.L210
	.byte	9
	.word	.L107,.L205,.L210
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L211
	.byte	0,0,7
	.word	.L110,.L212,.L213
	.byte	9
	.word	.L113,.L212,.L213
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L214
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.debug_line'
.L67:
	.word	.L326-.L325
.L325:
	.half	3
	.word	.L328-.L327
.L327:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L328:
	.byte	5,6,7,0,5,2
	.word	.L19
	.byte	3,204,1,1,4,2,5,5,9
	.half	.L205-.L19
	.byte	3,146,1,1,4,1,5,45,9
	.half	.L329-.L205
	.byte	3,154,126,1,5,21,9
	.half	.L210-.L329
	.byte	3,1,1,9
	.half	.L330-.L210
	.byte	3,1,1,4,3,5,19,9
	.half	.L212-.L330
	.byte	3,141,5,1,5,28,9
	.half	.L253-.L212
	.byte	3,1,1,4,1,5,15,9
	.half	.L213-.L253
	.byte	3,199,123,1,5,5,9
	.half	.L206-.L213
	.byte	3,1,1,9
	.half	.L255-.L206
	.byte	3,1,1,9
	.half	.L331-.L255
	.byte	3,1,1,5,1,9
	.half	.L332-.L331
	.byte	3,1,1,7,9
	.half	.L69-.L332
	.byte	0,1,1
.L326:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.debug_ranges'
.L68:
	.word	-1,.L19,0,.L69-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.debug_info'
.L70:
	.word	460
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_nonMaskableInterrupt',0,1,131,2,6,1,1,1
	.word	.L21,.L215,.L20
	.byte	4
	.byte	'tin',0,1,131,2,46
	.word	.L91,.L216
	.byte	5
	.word	.L21,.L215
	.byte	6
	.byte	'trapWatch',0,1,133,2,26
	.word	.L217,.L218
	.byte	7
	.word	.L95,.L219,.L220
	.byte	8
	.word	.L98,.L221
	.byte	8
	.word	.L100,.L222
	.byte	9
	.word	.L102,.L219,.L220
	.byte	6
	.byte	'trapInfo',0,1,120,17
	.word	.L103,.L223
	.byte	7
	.word	.L105,.L219,.L224
	.byte	9
	.word	.L107,.L219,.L224
	.byte	6
	.byte	'res',0,2,222,2,19
	.word	.L108,.L225
	.byte	0,0,7
	.word	.L110,.L226,.L227
	.byte	9
	.word	.L113,.L226,.L227
	.byte	6
	.byte	'reg',0,3,135,6,21
	.word	.L115,.L228
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.debug_line'
.L72:
	.word	.L334-.L333
.L333:
	.half	3
	.word	.L336-.L335
.L335:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L336:
	.byte	5,6,7,0,5,2
	.word	.L21
	.byte	3,130,2,1,4,2,5,5,9
	.half	.L219-.L21
	.byte	3,220,0,1,4,1,5,45,9
	.half	.L337-.L219
	.byte	3,154,126,1,5,21,9
	.half	.L224-.L337
	.byte	3,1,1,9
	.half	.L338-.L224
	.byte	3,1,1,4,3,5,19,9
	.half	.L226-.L338
	.byte	3,141,5,1,5,28,9
	.half	.L256-.L226
	.byte	3,1,1,4,1,5,15,9
	.half	.L227-.L256
	.byte	3,253,123,1,5,5,9
	.half	.L220-.L227
	.byte	3,1,1,9
	.half	.L258-.L220
	.byte	3,1,1,9
	.half	.L339-.L258
	.byte	3,1,1,5,1,9
	.half	.L340-.L339
	.byte	3,1,1,7,9
	.half	.L74-.L340
	.byte	0,1,1
.L334:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L21,0,.L74-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_vectorTable0')
	.sect	'.debug_info'
.L75:
	.word	254
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_vectorTable0',0,1,158,2,6,1,1,1
	.word	.L23,.L229,.L22
	.byte	4
	.word	.L23,.L229
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_vectorTable0')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_vectorTable0')
	.sect	'.debug_line'
.L77:
	.word	.L342-.L341
.L341:
	.half	3
	.word	.L344-.L343
.L343:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0,0
.L344:
	.byte	5,5,7,0,5,2
	.word	.L23
	.byte	3,159,2,1,9
	.half	.L345-.L23
	.byte	3,1,1,9
	.half	.L346-.L345
	.byte	3,1,1,9
	.half	.L347-.L346
	.byte	3,1,1,9
	.half	.L348-.L347
	.byte	3,1,1,9
	.half	.L349-.L348
	.byte	3,1,1,9
	.half	.L350-.L349
	.byte	3,1,1,9
	.half	.L351-.L350
	.byte	3,1,1,5,1,9
	.half	.L352-.L351
	.byte	3,1,1,7,9
	.half	.L79-.L352
	.byte	0,1,1
.L342:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_vectorTable0')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L23,0,.L79-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCpu_Trap_vectorTable1')
	.sect	'.debug_info'
.L80:
	.word	254
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L26
	.byte	3
	.byte	'IfxCpu_Trap_vectorTable1',0,1,187,2,6,1,1,1
	.word	.L25,.L230,.L24
	.byte	4
	.word	.L25,.L230
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCpu_Trap_vectorTable1')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCpu_Trap_vectorTable1')
	.sect	'.debug_line'
.L82:
	.word	.L354-.L353
.L353:
	.half	3
	.word	.L356-.L355
.L355:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0,0
.L356:
	.byte	5,5,7,0,5,2
	.word	.L25
	.byte	3,188,2,1,9
	.half	.L357-.L25
	.byte	3,1,1,9
	.half	.L358-.L357
	.byte	3,1,1,9
	.half	.L359-.L358
	.byte	3,1,1,9
	.half	.L360-.L359
	.byte	3,1,1,9
	.half	.L361-.L360
	.byte	3,1,1,9
	.half	.L362-.L361
	.byte	3,1,1,9
	.half	.L363-.L362
	.byte	3,1,1,5,1,9
	.half	.L364-.L363
	.byte	3,1,1,7,9
	.half	.L84-.L364
	.byte	0,1,1
.L354:
	.sdecl	'.debug_ranges',debug,cluster('IfxCpu_Trap_vectorTable1')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L25,0,.L84-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L85:
	.word	228
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\Debug\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L26
	.byte	3
	.byte	'.cocofun_1',0,1,129,1,6,1
	.word	.L5,.L89,.L4
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L87:
	.word	.L366-.L365
.L365:
	.half	3
	.word	.L368-.L367
.L367:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'G:\\Car-Competition\\LQ_TC26xB_LIBtasking20200616\\LQ_TC26xB_LIBtasking\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap\\IfxCpu_Trap.c',0,0,0,0
	.byte	'IfxCpu.h',0,1,0,0,0
.L368:
	.byte	5,13,7,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1,5,13,0,5,2
	.word	.L5
	.byte	3,251,0,1,4,2,5,28,9
	.half	.L369-.L5
	.byte	3,141,5,1,4,1,5,21,9
	.half	.L233-.L369
	.byte	3,243,122,1,9
	.half	.L89-.L233
	.byte	0,1,1
.L366:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L5,0,.L89-.L5,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L4:
	.word	-1,.L5,0,.L89-.L5
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_assertion')
	.sect	'.debug_loc'
.L14:
	.word	-1,.L15,0,.L177-.L15
	.half	2
	.byte	138,0
	.word	.L177-.L15,.L173-.L15
	.half	2
	.byte	138,8
	.word	.L173-.L15,.L173-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L186:
	.word	-1,.L15,.L247-.L15,.L185-.L15
	.half	1
	.byte	95
	.word	.L5-.L15,.L233-.L15
	.half	1
	.byte	95
	.word	0,0
.L183:
	.word	-1,.L15,.L5-.L15,.L89-.L15
	.half	1
	.byte	111
	.word	.L248-.L15,.L173-.L15
	.half	1
	.byte	111
	.word	0,0
.L180:
	.word	0,0
.L174:
	.word	-1,.L15,.L5-.L15,.L89-.L15
	.half	1
	.byte	84
	.word	0,.L173-.L15
	.half	1
	.byte	84
	.word	0,0
.L179:
	.word	0,0
.L181:
	.word	-1,.L15,.L5-.L15,.L89-.L15
	.half	2
	.byte	144,32
	.word	.L182-.L15,.L249-.L15
	.half	2
	.byte	144,32
	.word	0,0
.L176:
	.word	-1,.L15,.L5-.L15,.L89-.L15
	.half	2
	.byte	145,120
	.word	0,.L173-.L15
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_busError')
	.sect	'.debug_loc'
.L12:
	.word	-1,.L13,0,.L163-.L13
	.half	2
	.byte	138,0
	.word	.L163-.L13,.L159-.L13
	.half	2
	.byte	138,8
	.word	.L159-.L13,.L159-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L172:
	.word	-1,.L13,.L244-.L13,.L171-.L13
	.half	1
	.byte	95
	.word	.L5-.L13,.L233-.L13
	.half	1
	.byte	95
	.word	0,0
.L169:
	.word	-1,.L13,.L5-.L13,.L89-.L13
	.half	1
	.byte	111
	.word	.L245-.L13,.L159-.L13
	.half	1
	.byte	111
	.word	0,0
.L166:
	.word	0,0
.L160:
	.word	-1,.L13,.L5-.L13,.L89-.L13
	.half	1
	.byte	84
	.word	0,.L159-.L13
	.half	1
	.byte	84
	.word	0,0
.L165:
	.word	0,0
.L167:
	.word	-1,.L13,.L5-.L13,.L89-.L13
	.half	2
	.byte	144,32
	.word	.L168-.L13,.L246-.L13
	.half	2
	.byte	144,32
	.word	0,0
.L162:
	.word	-1,.L13,.L5-.L13,.L89-.L13
	.half	2
	.byte	145,120
	.word	0,.L159-.L13
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.debug_loc'
.L10:
	.word	-1,.L11,0,.L149-.L11
	.half	2
	.byte	138,0
	.word	.L149-.L11,.L145-.L11
	.half	2
	.byte	138,8
	.word	.L145-.L11,.L145-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L158:
	.word	-1,.L11,.L241-.L11,.L157-.L11
	.half	1
	.byte	95
	.word	.L5-.L11,.L233-.L11
	.half	1
	.byte	95
	.word	0,0
.L155:
	.word	-1,.L11,.L5-.L11,.L89-.L11
	.half	1
	.byte	111
	.word	.L242-.L11,.L145-.L11
	.half	1
	.byte	111
	.word	0,0
.L152:
	.word	0,0
.L146:
	.word	-1,.L11,.L5-.L11,.L89-.L11
	.half	1
	.byte	84
	.word	0,.L145-.L11
	.half	1
	.byte	84
	.word	0,0
.L151:
	.word	0,0
.L153:
	.word	-1,.L11,.L5-.L11,.L89-.L11
	.half	2
	.byte	144,32
	.word	.L154-.L11,.L243-.L11
	.half	2
	.byte	144,32
	.word	0,0
.L148:
	.word	-1,.L11,.L5-.L11,.L89-.L11
	.half	2
	.byte	145,120
	.word	0,.L145-.L11
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_instructionError')
	.sect	'.debug_loc'
.L8:
	.word	-1,.L9,0,.L135-.L9
	.half	2
	.byte	138,0
	.word	.L135-.L9,.L131-.L9
	.half	2
	.byte	138,8
	.word	.L131-.L9,.L131-.L9
	.half	2
	.byte	138,0
	.word	0,0
.L144:
	.word	-1,.L9,.L238-.L9,.L143-.L9
	.half	1
	.byte	95
	.word	.L5-.L9,.L233-.L9
	.half	1
	.byte	95
	.word	0,0
.L141:
	.word	-1,.L9,.L5-.L9,.L89-.L9
	.half	1
	.byte	111
	.word	.L239-.L9,.L131-.L9
	.half	1
	.byte	111
	.word	0,0
.L138:
	.word	0,0
.L132:
	.word	-1,.L9,.L5-.L9,.L89-.L9
	.half	1
	.byte	84
	.word	0,.L131-.L9
	.half	1
	.byte	84
	.word	0,0
.L137:
	.word	0,0
.L139:
	.word	-1,.L9,.L5-.L9,.L89-.L9
	.half	2
	.byte	144,32
	.word	.L140-.L9,.L240-.L9
	.half	2
	.byte	144,32
	.word	0,0
.L134:
	.word	-1,.L9,.L5-.L9,.L89-.L9
	.half	2
	.byte	145,120
	.word	0,.L131-.L9
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.debug_loc'
.L6:
	.word	-1,.L7,0,.L121-.L7
	.half	2
	.byte	138,0
	.word	.L121-.L7,.L117-.L7
	.half	2
	.byte	138,8
	.word	.L117-.L7,.L117-.L7
	.half	2
	.byte	138,0
	.word	0,0
.L130:
	.word	-1,.L7,.L235-.L7,.L129-.L7
	.half	1
	.byte	95
	.word	.L5-.L7,.L233-.L7
	.half	1
	.byte	95
	.word	0,0
.L127:
	.word	-1,.L7,.L5-.L7,.L89-.L7
	.half	1
	.byte	111
	.word	.L236-.L7,.L117-.L7
	.half	1
	.byte	111
	.word	0,0
.L124:
	.word	0,0
.L118:
	.word	-1,.L7,.L5-.L7,.L89-.L7
	.half	1
	.byte	84
	.word	0,.L117-.L7
	.half	1
	.byte	84
	.word	0,0
.L123:
	.word	0,0
.L125:
	.word	-1,.L7,.L5-.L7,.L89-.L7
	.half	2
	.byte	144,32
	.word	.L126-.L7,.L237-.L7
	.half	2
	.byte	144,32
	.word	0,0
.L120:
	.word	-1,.L7,.L5-.L7,.L89-.L7
	.half	2
	.byte	145,120
	.word	0,.L117-.L7
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.debug_loc'
.L2:
	.word	-1,.L3,0,.L96-.L3
	.half	2
	.byte	138,0
	.word	.L96-.L3,.L90-.L3
	.half	2
	.byte	138,8
	.word	.L90-.L3,.L90-.L3
	.half	2
	.byte	138,0
	.word	0,0
.L116:
	.word	-1,.L3,.L232-.L3,.L112-.L3
	.half	1
	.byte	95
	.word	.L5-.L3,.L233-.L3
	.half	1
	.byte	95
	.word	0,0
.L109:
	.word	-1,.L3,.L231-.L3,.L112-.L3
	.half	1
	.byte	111
	.word	.L5-.L3,.L89-.L3
	.half	1
	.byte	111
	.word	.L97-.L3,.L90-.L3
	.half	1
	.byte	111
	.word	0,0
.L101:
	.word	0,0
.L92:
	.word	-1,.L3,0,.L112-.L3
	.half	1
	.byte	84
	.word	.L5-.L3,.L89-.L3
	.half	1
	.byte	84
	.word	.L97-.L3,.L90-.L3
	.half	1
	.byte	84
	.word	0,0
.L99:
	.word	0,0
.L104:
	.word	-1,.L3,.L106-.L3,.L112-.L3
	.half	2
	.byte	144,32
	.word	.L5-.L3,.L89-.L3
	.half	2
	.byte	144,32
	.word	.L97-.L3,.L234-.L3
	.half	2
	.byte	144,32
	.word	0,0
.L94:
	.word	-1,.L3,0,.L112-.L3
	.half	2
	.byte	145,120
	.word	.L5-.L3,.L89-.L3
	.half	2
	.byte	145,120
	.word	.L97-.L3,.L90-.L3
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L219-.L21
	.half	2
	.byte	138,0
	.word	.L219-.L21,.L215-.L21
	.half	2
	.byte	138,8
	.word	.L215-.L21,.L215-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L228:
	.word	-1,.L21,.L256-.L21,.L227-.L21
	.half	1
	.byte	95
	.word	.L5-.L21,.L233-.L21
	.half	1
	.byte	95
	.word	0,0
.L225:
	.word	-1,.L21,.L5-.L21,.L89-.L21
	.half	1
	.byte	111
	.word	.L257-.L21,.L215-.L21
	.half	1
	.byte	111
	.word	0,0
.L222:
	.word	0,0
.L216:
	.word	-1,.L21,.L5-.L21,.L89-.L21
	.half	1
	.byte	84
	.word	0,.L215-.L21
	.half	1
	.byte	84
	.word	0,0
.L221:
	.word	0,0
.L223:
	.word	-1,.L21,.L5-.L21,.L89-.L21
	.half	2
	.byte	144,32
	.word	.L224-.L21,.L258-.L21
	.half	2
	.byte	144,32
	.word	0,0
.L218:
	.word	-1,.L21,.L5-.L21,.L89-.L21
	.half	2
	.byte	145,120
	.word	0,.L215-.L21
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.debug_loc'
.L16:
	.word	-1,.L17,0,.L191-.L17
	.half	2
	.byte	138,0
	.word	.L191-.L17,.L187-.L17
	.half	2
	.byte	138,8
	.word	.L187-.L17,.L187-.L17
	.half	2
	.byte	138,0
	.word	0,0
.L200:
	.word	-1,.L17,.L250-.L17,.L199-.L17
	.half	1
	.byte	95
	.word	.L5-.L17,.L233-.L17
	.half	1
	.byte	95
	.word	0,0
.L197:
	.word	-1,.L17,.L5-.L17,.L89-.L17
	.half	1
	.byte	111
	.word	.L251-.L17,.L187-.L17
	.half	1
	.byte	111
	.word	0,0
.L194:
	.word	0,0
.L188:
	.word	-1,.L17,.L5-.L17,.L89-.L17
	.half	1
	.byte	84
	.word	0,.L187-.L17
	.half	1
	.byte	84
	.word	0,0
.L193:
	.word	0,0
.L195:
	.word	-1,.L17,.L5-.L17,.L89-.L17
	.half	2
	.byte	144,32
	.word	.L196-.L17,.L252-.L17
	.half	2
	.byte	144,32
	.word	0,0
.L190:
	.word	-1,.L17,.L5-.L17,.L89-.L17
	.half	2
	.byte	145,120
	.word	0,.L187-.L17
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,0,.L205-.L19
	.half	2
	.byte	138,0
	.word	.L205-.L19,.L201-.L19
	.half	2
	.byte	138,8
	.word	.L201-.L19,.L201-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L214:
	.word	-1,.L19,.L253-.L19,.L213-.L19
	.half	1
	.byte	95
	.word	.L5-.L19,.L233-.L19
	.half	1
	.byte	95
	.word	0,0
.L211:
	.word	-1,.L19,.L5-.L19,.L89-.L19
	.half	1
	.byte	111
	.word	.L254-.L19,.L201-.L19
	.half	1
	.byte	111
	.word	0,0
.L208:
	.word	0,0
.L202:
	.word	-1,.L19,.L5-.L19,.L89-.L19
	.half	1
	.byte	84
	.word	0,.L201-.L19
	.half	1
	.byte	84
	.word	0,0
.L207:
	.word	0,0
.L209:
	.word	-1,.L19,.L5-.L19,.L89-.L19
	.half	2
	.byte	144,32
	.word	.L210-.L19,.L255-.L19
	.half	2
	.byte	144,32
	.word	0,0
.L204:
	.word	-1,.L19,.L5-.L19,.L89-.L19
	.half	2
	.byte	145,120
	.word	0,.L201-.L19
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_vectorTable0')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L229-.L23
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCpu_Trap_vectorTable1')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L230-.L25
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L370:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_memoryManagementError')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L3,.L90-.L3
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L96-.L3)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L90-.L96)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_internalProtectionError')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L7,.L117-.L7
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L121-.L7)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L117-.L121)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_instructionError')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L9,.L131-.L9
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L135-.L9)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L131-.L135)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_contextManagementError')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L11,.L145-.L11
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L149-.L11)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L145-.L149)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_busError')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L13,.L159-.L13
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L163-.L13)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L159-.L163)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_assertion')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L15,.L173-.L15
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L177-.L15)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L173-.L177)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_systemCall_Cpu0')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L17,.L187-.L17
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L191-.L17)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L187-.L191)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_systemCall_Cpu1')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L19,.L201-.L19
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L205-.L19)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L201-.L205)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_nonMaskableInterrupt')
	.sect	'.debug_frame'
	.word	48
	.word	.L370,.L21,.L215-.L21
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L219-.L21)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L215-.L219)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_vectorTable0')
	.sect	'.debug_frame'
	.word	24
	.word	.L370,.L23,.L229-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxCpu_Trap_vectorTable1')
	.sect	'.debug_frame'
	.word	24
	.word	.L370,.L25,.L230-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L371:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L371,.L5,.L89-.L5
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   326  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   328  #if IFXCPU_NUM_MODULES >= 3
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   329  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   330  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   331  #pragma section ".traptab_cpu2" awx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   332  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   333  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   334  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   335  #pragma section CODE ".traptab_cpu2" X
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   336  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   337  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   338  #pragma section code "traptab_cpu2"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   339  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   340  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   341  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   342  #pragma ghs section text=".traptab_cpu2"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   343  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   344  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   345  void IfxCpu_Trap_vectorTable2(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   346  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   347      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_memoryManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   348      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_internalProtectionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   349      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_instructionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   350      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_contextManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   351      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_busError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   352      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_assertion);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   353      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_systemCall_Cpu2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   354      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_nonMaskableInterrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   355  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   356  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   358  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   360  #if IFXCPU_NUM_MODULES >= 4
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   361  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   362  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   363  #pragma section ".traptab_cpu3" awx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   364  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   365  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   366  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   367  #pragma section CODE ".traptab_cpu3" X
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   368  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   369  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   370  #pragma section code "traptab_cpu3"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   371  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   372  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   373  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   374  #pragma ghs section text=".traptab_cpu3"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   375  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   376  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   378  void IfxCpu_Trap_vectorTable3(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   379  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   380      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_memoryManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   381      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_internalProtectionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   382      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_instructionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   383      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_contextManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   384      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_busError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   385      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_assertion);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   386      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_systemCall_Cpu3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   387      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_nonMaskableInterrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   388  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   389  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   390  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   391  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   392  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   393  #if IFXCPU_NUM_MODULES >= 5
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   394  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   395  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   396  #pragma section ".traptab_cpu4" awx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   397  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   398  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   399  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   400  #pragma section CODE ".traptab_cpu4" X
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   401  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   402  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   403  #pragma section code "traptab_cpu4"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   404  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   405  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   406  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   407  #pragma ghs section text=".traptab_cpu4"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   408  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   409  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   410  void IfxCpu_Trap_vectorTable4(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   411  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   412      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_memoryManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   413      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_internalProtectionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   414      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_instructionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   415      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_contextManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   416      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_busError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   417      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_assertion);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   418      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_systemCall_Cpu4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   419      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_nonMaskableInterrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   420  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   421  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   422  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   423  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   424  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   425  #if IFXCPU_NUM_MODULES >= 6
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   426  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   427  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   428  #pragma section ".traptab_cpu5" awx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   429  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   430  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   431  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   432  #pragma section CODE ".traptab_cpu5" X
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   433  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   434  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   435  #pragma section code "traptab_cpu5"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   436  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   437  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   438  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   439  #pragma ghs section text=".traptab_cpu5"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   440  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   441  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   442  void IfxCpu_Trap_vectorTable5(void)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   443  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   444      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_memoryManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   445      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_internalProtectionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   446      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_instructionError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   447      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_contextManagementError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   448      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_busError);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   449      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_assertion);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   450      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_systemCall_Cpu5);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   451      IfxCpu_Tsr_CallTSR(IfxCpu_Trap_nonMaskableInterrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   452  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   453  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   454  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   455  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   457  #if defined(__HIGHTEC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   458  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   459  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   460  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   461  #pragma section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   462  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   463  #if defined(__DCC__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   464  #pragma interrupt IfxInterruptEx
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   465  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   466  #if defined(__TASKING__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   467  #pragma endprotect
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   468  #endif
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   469  #if defined(__ghs__)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   470  #pragma ghs section
; ..\src\BaseSw\iLLD\TC26B\Tricore\Cpu\Trap\IfxCpu_Trap.c	   471  #endif

	; Module end
